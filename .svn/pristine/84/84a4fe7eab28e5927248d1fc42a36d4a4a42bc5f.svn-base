package br.com.locadora.modelo;

// Generated 15/08/2014 10:36:04 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * ContaCorrente generated by hbm2java
 */
@Entity
@Audited
@Table(name = "CONTA_CORRENTE", catalog = "renovarsistemas")
@AuditTable(value="CONTA_CORRENTE", schema="log", catalog="renovarsistemas")
public class ContaCorrente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5727834725838538639L;
	private int conCorId;
	private GrupoDeContas grupoDeContas;
	private Pessoa pessoa;
	private Integer conCorIdDocumento;
	private Integer conCorResponsavel;
	private Boolean conCorTipo;
	private Double conCorValor;
	private Date conCorDataVencimento;
	private Boolean conCorSituacao;
	private String conCorHistorico;
	private String conCorObservacao;
	private Date conCorDataEmissao;
	private Date conCorDataPagamento;
	private Date conCorDataLiquidacao;
	private Date conCorDataCopetenciaInicial;
	private Date conCorDataCopetenciaFinal;
	private String conCorTipoCliente;

	public ContaCorrente() {
	}

	public ContaCorrente(int conCorId, GrupoDeContas grupoDeContas,
			 Pessoa pessoa) {
		this.conCorId = conCorId;
		this.grupoDeContas = grupoDeContas;
		this.pessoa = pessoa;
	}

	public ContaCorrente(int conCorId, GrupoDeContas grupoDeContas,
			 Pessoa pessoa,Integer conCorResponsavel,
			Integer conCorIdDocumento, Boolean conCorTipo, Double conCorValor,
			Date conCorDataVencimento, Boolean conCorSituacao,
			String conCorHistorico, String conCorObservacao,
			Date conCorDataEmissao, Date conCorDataPagamento,
			Date conCorDataLiquidacao, Date conCorDataCopetenciaInicial,
			Date conCorDataCopetenciaFinal,String conCorTipoCliente) {
		this.conCorId = conCorId;
		this.grupoDeContas = grupoDeContas;
		this.pessoa = pessoa;
		this.conCorIdDocumento = conCorIdDocumento;
		this.conCorTipo = conCorTipo;
		this.conCorValor = conCorValor;
		this.conCorDataVencimento = conCorDataVencimento;
		this.conCorSituacao = conCorSituacao;
		this.conCorHistorico = conCorHistorico;
		this.conCorObservacao = conCorObservacao;
		this.conCorDataEmissao = conCorDataEmissao;
		this.conCorDataPagamento = conCorDataPagamento;
		this.conCorDataLiquidacao = conCorDataLiquidacao;
		this.conCorDataCopetenciaInicial = conCorDataCopetenciaInicial;
		this.conCorDataCopetenciaFinal = conCorDataCopetenciaFinal;
		this.conCorTipoCliente=conCorTipoCliente;
		this.conCorResponsavel=conCorResponsavel;
	}

	@Id
	@GeneratedValue
	@Column(name = "CON_COR_ID", unique = true, nullable = false)
	public int getConCorId() {
		return this.conCorId;
	}

	public void setConCorId(int conCorId) {
		this.conCorId = conCorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRU_CON_ID", nullable = false)
	public GrupoDeContas getGrupoDeContas() {
		return this.grupoDeContas;
	}

	public void setGrupoDeContas(GrupoDeContas grupoDeContas) {
		this.grupoDeContas = grupoDeContas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "CON_COR_ID_DOCUMENTO")
	public Integer getConCorIdDocumento() {
		return this.conCorIdDocumento;
	}

	public void setConCorIdDocumento(Integer conCorIdDocumento) {
		this.conCorIdDocumento = conCorIdDocumento;
	}
	@Column(name = "CON_COR_RESPONSAVEL")
	public Integer getConCorResponsavel() {
		return conCorResponsavel;
	}

	public void setConCorResponsavel(Integer conCorResponsavel) {
		this.conCorResponsavel = conCorResponsavel;
	}

	@Column(name = "CON_COR_TIPO")
	public Boolean getConCorTipo() {
		return this.conCorTipo;
	}

	public void setConCorTipo(Boolean conCorTipo) {
		this.conCorTipo = conCorTipo;
	}

	@Column(name = "CON_COR_VALOR", precision = 53, scale = 0)
	public Double getConCorValor() {
		return this.conCorValor;
	}

	public void setConCorValor(Double conCorValor) {
		this.conCorValor = conCorValor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_VENCIMENTO", length = 23)
	public Date getConCorDataVencimento() {
		return this.conCorDataVencimento;
	}

	public void setConCorDataVencimento(Date conCorDataVencimento) {
		this.conCorDataVencimento = conCorDataVencimento;
	}

	@Column(name = "CON_COR_SITUACAO")
	public Boolean getConCorSituacao() {
		return this.conCorSituacao;
	}

	public void setConCorSituacao(Boolean conCorSituacao) {
		this.conCorSituacao = conCorSituacao;
	}

	@Column(name = "CON_COR_HISTORICO", length = 251)
	public String getConCorHistorico() {
		return this.conCorHistorico;
	}

	public void setConCorHistorico(String conCorHistorico) {
		this.conCorHistorico = conCorHistorico;
	}
	
	@Column(name = "CON_COR_TIPO_CLIENTE", length = 101)
	public String getConCorTipoCliente() {
		return conCorTipoCliente;
	}

	public void setConCorTipoCliente(String conCorTipoCliente) {
		this.conCorTipoCliente = conCorTipoCliente;
	}

	@Column(name = "CON_COR_OBSERVACAO", length = 201)
	public String getConCorObservacao() {
		return this.conCorObservacao;
	}

	public void setConCorObservacao(String conCorObservacao) {
		this.conCorObservacao = conCorObservacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_EMISSAO", length = 23)
	public Date getConCorDataEmissao() {
		return this.conCorDataEmissao;
	}

	public void setConCorDataEmissao(Date conCorDataEmissao) {
		this.conCorDataEmissao = conCorDataEmissao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_PAGAMENTO", length = 23)
	public Date getConCorDataPagamento() {
		return this.conCorDataPagamento;
	}

	public void setConCorDataPagamento(Date conCorDataPagamento) {
		this.conCorDataPagamento = conCorDataPagamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_LIQUIDACAO", length = 23)
	public Date getConCorDataLiquidacao() {
		return this.conCorDataLiquidacao;
	}

	public void setConCorDataLiquidacao(Date conCorDataLiquidacao) {
		this.conCorDataLiquidacao = conCorDataLiquidacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_COPETENCIA_INICIAL", length = 23)
	public Date getConCorDataCopetenciaInicial() {
		return this.conCorDataCopetenciaInicial;
	}

	public void setConCorDataCopetenciaInicial(Date conCorDataCopetenciaInicial) {
		this.conCorDataCopetenciaInicial = conCorDataCopetenciaInicial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CON_COR_DATA_COPETENCIA_FINAL", length = 23)
	public Date getConCorDataCopetenciaFinal() {
		return this.conCorDataCopetenciaFinal;
	}

	public void setConCorDataCopetenciaFinal(Date conCorDataCopetenciaFinal) {
		this.conCorDataCopetenciaFinal = conCorDataCopetenciaFinal;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((conCorDataCopetenciaFinal == null) ? 0
						: conCorDataCopetenciaFinal.hashCode());
		result = prime
				* result
				+ ((conCorDataCopetenciaInicial == null) ? 0
						: conCorDataCopetenciaInicial.hashCode());
		result = prime
				* result
				+ ((conCorDataEmissao == null) ? 0 : conCorDataEmissao
						.hashCode());
		result = prime
				* result
				+ ((conCorDataLiquidacao == null) ? 0 : conCorDataLiquidacao
						.hashCode());
		result = prime
				* result
				+ ((conCorDataPagamento == null) ? 0 : conCorDataPagamento
						.hashCode());
		result = prime
				* result
				+ ((conCorDataVencimento == null) ? 0 : conCorDataVencimento
						.hashCode());
		result = prime * result
				+ ((conCorHistorico == null) ? 0 : conCorHistorico.hashCode());
		result = prime * result + conCorId;
		result = prime
				* result
				+ ((conCorIdDocumento == null) ? 0 : conCorIdDocumento
						.hashCode());
		result = prime
				* result
				+ ((conCorObservacao == null) ? 0 : conCorObservacao.hashCode());
		result = prime
				* result
				+ ((conCorResponsavel == null) ? 0 : conCorResponsavel
						.hashCode());
		result = prime * result
				+ ((conCorSituacao == null) ? 0 : conCorSituacao.hashCode());
		result = prime * result
				+ ((conCorTipo == null) ? 0 : conCorTipo.hashCode());
		result = prime
				* result
				+ ((conCorTipoCliente == null) ? 0 : conCorTipoCliente
						.hashCode());
		result = prime * result
				+ ((conCorValor == null) ? 0 : conCorValor.hashCode());
		result = prime * result
				+ ((grupoDeContas == null) ? 0 : grupoDeContas.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ContaCorrente other = (ContaCorrente) obj;
		if (conCorDataCopetenciaFinal == null) {
			if (other.conCorDataCopetenciaFinal != null)
				return false;
		} else if (!conCorDataCopetenciaFinal
				.equals(other.conCorDataCopetenciaFinal))
			return false;
		if (conCorDataCopetenciaInicial == null) {
			if (other.conCorDataCopetenciaInicial != null)
				return false;
		} else if (!conCorDataCopetenciaInicial
				.equals(other.conCorDataCopetenciaInicial))
			return false;
		if (conCorDataEmissao == null) {
			if (other.conCorDataEmissao != null)
				return false;
		} else if (!conCorDataEmissao.equals(other.conCorDataEmissao))
			return false;
		if (conCorDataLiquidacao == null) {
			if (other.conCorDataLiquidacao != null)
				return false;
		} else if (!conCorDataLiquidacao.equals(other.conCorDataLiquidacao))
			return false;
		if (conCorDataPagamento == null) {
			if (other.conCorDataPagamento != null)
				return false;
		} else if (!conCorDataPagamento.equals(other.conCorDataPagamento))
			return false;
		if (conCorDataVencimento == null) {
			if (other.conCorDataVencimento != null)
				return false;
		} else if (!conCorDataVencimento.equals(other.conCorDataVencimento))
			return false;
		if (conCorHistorico == null) {
			if (other.conCorHistorico != null)
				return false;
		} else if (!conCorHistorico.equals(other.conCorHistorico))
			return false;
		if (conCorId != other.conCorId)
			return false;
		if (conCorIdDocumento == null) {
			if (other.conCorIdDocumento != null)
				return false;
		} else if (!conCorIdDocumento.equals(other.conCorIdDocumento))
			return false;
		if (conCorObservacao == null) {
			if (other.conCorObservacao != null)
				return false;
		} else if (!conCorObservacao.equals(other.conCorObservacao))
			return false;
		if (conCorResponsavel == null) {
			if (other.conCorResponsavel != null)
				return false;
		} else if (!conCorResponsavel.equals(other.conCorResponsavel))
			return false;
		if (conCorSituacao == null) {
			if (other.conCorSituacao != null)
				return false;
		} else if (!conCorSituacao.equals(other.conCorSituacao))
			return false;
		if (conCorTipo == null) {
			if (other.conCorTipo != null)
				return false;
		} else if (!conCorTipo.equals(other.conCorTipo))
			return false;
		if (conCorTipoCliente == null) {
			if (other.conCorTipoCliente != null)
				return false;
		} else if (!conCorTipoCliente.equals(other.conCorTipoCliente))
			return false;
		if (conCorValor == null) {
			if (other.conCorValor != null)
				return false;
		} else if (!conCorValor.equals(other.conCorValor))
			return false;
		if (grupoDeContas == null) {
			if (other.grupoDeContas != null)
				return false;
		} else if (!grupoDeContas.equals(other.grupoDeContas))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ContaCorrente [conCorId=" + conCorId + "]";
	}

}
