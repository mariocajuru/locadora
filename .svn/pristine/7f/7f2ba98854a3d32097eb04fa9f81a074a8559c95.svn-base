package br.com.locadora.modelo;

// Generated 17/04/2014 10:03:32 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * ImovelDesejado generated by hbm2java
 */
@Audited
@Entity
@Table(name = "IMOVEL_DESEJADO", catalog = "renovarsistemas")
@AuditTable(value="IMOVEL_DESEJADO", schema="log", catalog="renovarsistemas")
public class ImovelDesejado implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8911929827304212298L;
	private int imoDesId;
	private Tipoimovel tipoimovel;
	private Pessoa pessoa;
	private EnderecoImovelDesejado enderecoImovelDesejado;
	private Date imoDesDataConstrucao;
	private Date imoDesDataCadastro;
	private Boolean imoDesVenda;
	private Boolean imoDesLocacao;
	private Integer imoDesQuartosDe;
	private Integer imoDesQuartosAte;
	private Integer imoDesAreaImovelDe;
	private Integer imoDesAreaImovelAte;
	private Integer imoDesAreaTerrenoDe;
	private Integer imoDesAreaTerrenoAte;
	private Double imoDesValorMercadoDe;
	private Double imoDesValorMercadoAte;
	private Double imoDesValorCondominioDe;
	private Double imoDesValorCondominioAte;
	private String imoDesObservacao;
	private Double imoDesValorAluguelDe;
	private Double imoDesValorAluguelAte;
	private Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados = new HashSet<CaracteristicasImovelDesejado>(
			0);

	public ImovelDesejado() {
	}

	public ImovelDesejado(int imoDesId, Tipoimovel tipoimovel, Pessoa pessoa) {
		this.imoDesId = imoDesId;
		this.tipoimovel = tipoimovel;
		this.pessoa = pessoa;
	}

	public ImovelDesejado(int imoDesId, Tipoimovel tipoimovel, Pessoa pessoa,
			EnderecoImovelDesejado enderecoImovelDesejado,
			Date imoDesDataConstrucao, Date imoDesDataCadastro,
			Boolean imoDesVenda, Boolean imoDesLocacao,
			Integer imoDesQuartosDe, Integer imoDesQuartosAte,
			Integer imoDesAreaImovelDe, Integer imoDesAreaImovelAte,
			Integer imoDesAreaTerrenoDe, Integer imoDesAreaTerrenoAte,
			Double imoDesValorMercadoDe, Double imoDesValorMercadoAte,
			Double imoDesValorCondominioDe, Double imoDesValorCondominioAte,
			String imoDesObservacao, Double imoDesValorAluguelDe,
			Double imoDesValorAluguelAte,
			Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados) {
		this.imoDesId = imoDesId;
		this.tipoimovel = tipoimovel;
		this.pessoa = pessoa;
		this.enderecoImovelDesejado = enderecoImovelDesejado;
		this.imoDesDataConstrucao = imoDesDataConstrucao;
		this.imoDesDataCadastro = imoDesDataCadastro;
		this.imoDesVenda = imoDesVenda;
		this.imoDesLocacao = imoDesLocacao;
		this.imoDesQuartosDe = imoDesQuartosDe;
		this.imoDesQuartosAte = imoDesQuartosAte;
		this.imoDesAreaImovelDe = imoDesAreaImovelDe;
		this.imoDesAreaImovelAte = imoDesAreaImovelAte;
		this.imoDesAreaTerrenoDe = imoDesAreaTerrenoDe;
		this.imoDesAreaTerrenoAte = imoDesAreaTerrenoAte;
		this.imoDesValorMercadoDe = imoDesValorMercadoDe;
		this.imoDesValorMercadoAte = imoDesValorMercadoAte;
		this.imoDesValorCondominioDe = imoDesValorCondominioDe;
		this.imoDesValorCondominioAte = imoDesValorCondominioAte;
		this.imoDesObservacao = imoDesObservacao;
		this.imoDesValorAluguelDe = imoDesValorAluguelDe;
		this.imoDesValorAluguelAte = imoDesValorAluguelAte;
		this.caracteristicasImovelDesejados = caracteristicasImovelDesejados;
	}

	@Id
	@GeneratedValue
	@Column(name = "IMO_DES_ID", unique = true, nullable = false)
	public int getImoDesId() {
		return this.imoDesId;
	}

	public void setImoDesId(int imoDesId) {
		this.imoDesId = imoDesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIP_ID", nullable = false)
	public Tipoimovel getTipoimovel() {
		return this.tipoimovel;
	}

	public void setTipoimovel(Tipoimovel tipoimovel) {
		this.tipoimovel = tipoimovel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "END_IMO_DES_ID")
	public EnderecoImovelDesejado getEnderecoImovelDesejado() {
		return this.enderecoImovelDesejado;
	}

	public void setEnderecoImovelDesejado(
			EnderecoImovelDesejado enderecoImovelDesejado) {
		this.enderecoImovelDesejado = enderecoImovelDesejado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DES_DATA_CONSTRUCAO", length = 23)
	public Date getImoDesDataConstrucao() {
		return this.imoDesDataConstrucao;
	}

	public void setImoDesDataConstrucao(Date imoDesDataConstrucao) {
		this.imoDesDataConstrucao = imoDesDataConstrucao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DES_DATA_CADASTRO", length = 23)
	public Date getImoDesDataCadastro() {
		return this.imoDesDataCadastro;
	}

	public void setImoDesDataCadastro(Date imoDesDataCadastro) {
		this.imoDesDataCadastro = imoDesDataCadastro;
	}

	@Column(name = "IMO_DES_VENDA")
	public Boolean getImoDesVenda() {
		return this.imoDesVenda;
	}

	public void setImoDesVenda(Boolean imoDesVenda) {
		this.imoDesVenda = imoDesVenda;
	}

	@Column(name = "IMO_DES_LOCACAO")
	public Boolean getImoDesLocacao() {
		return this.imoDesLocacao;
	}

	public void setImoDesLocacao(Boolean imoDesLocacao) {
		this.imoDesLocacao = imoDesLocacao;
	}

	@Column(name = "IMO_DES_QUARTOS_DE")
	public Integer getImoDesQuartosDe() {
		return this.imoDesQuartosDe;
	}

	public void setImoDesQuartosDe(Integer imoDesQuartosDe) {
		this.imoDesQuartosDe = imoDesQuartosDe;
	}

	@Column(name = "IMO_DES_QUARTOS_ATE")
	public Integer getImoDesQuartosAte() {
		return this.imoDesQuartosAte;
	}

	public void setImoDesQuartosAte(Integer imoDesQuartosAte) {
		this.imoDesQuartosAte = imoDesQuartosAte;
	}

	@Column(name = "IMO_DES_AREA_IMOVEL_DE")
	public Integer getImoDesAreaImovelDe() {
		return this.imoDesAreaImovelDe;
	}

	public void setImoDesAreaImovelDe(Integer imoDesAreaImovelDe) {
		this.imoDesAreaImovelDe = imoDesAreaImovelDe;
	}

	@Column(name = "IMO_DES_AREA_IMOVEL_ATE")
	public Integer getImoDesAreaImovelAte() {
		return this.imoDesAreaImovelAte;
	}

	public void setImoDesAreaImovelAte(Integer imoDesAreaImovelAte) {
		this.imoDesAreaImovelAte = imoDesAreaImovelAte;
	}

	@Column(name = "IMO_DES_AREA_TERRENO_DE")
	public Integer getImoDesAreaTerrenoDe() {
		return this.imoDesAreaTerrenoDe;
	}

	public void setImoDesAreaTerrenoDe(Integer imoDesAreaTerrenoDe) {
		this.imoDesAreaTerrenoDe = imoDesAreaTerrenoDe;
	}

	@Column(name = "IMO_DES_AREA_TERRENO_ATE")
	public Integer getImoDesAreaTerrenoAte() {
		return this.imoDesAreaTerrenoAte;
	}

	public void setImoDesAreaTerrenoAte(Integer imoDesAreaTerrenoAte) {
		this.imoDesAreaTerrenoAte = imoDesAreaTerrenoAte;
	}

	@Column(name = "IMO_DES_VALOR_MERCADO_DE")
	public Double getImoDesValorMercadoDe() {
		return this.imoDesValorMercadoDe;
	}

	public void setImoDesValorMercadoDe(Double imoDesValorMercadoDe) {
		this.imoDesValorMercadoDe = imoDesValorMercadoDe;
	}

	@Column(name = "IMO_DES_VALOR_MERCADO_ATE")
	public Double getImoDesValorMercadoAte() {
		return this.imoDesValorMercadoAte;
	}

	public void setImoDesValorMercadoAte(Double imoDesValorMercadoAte) {
		this.imoDesValorMercadoAte = imoDesValorMercadoAte;
	}

	@Column(name = "IMO_DES_VALOR_CONDOMINIO_DE", precision = 53, scale = 0)
	public Double getImoDesValorCondominioDe() {
		return this.imoDesValorCondominioDe;
	}

	public void setImoDesValorCondominioDe(Double imoDesValorCondominioDe) {
		this.imoDesValorCondominioDe = imoDesValorCondominioDe;
	}

	@Column(name = "IMO_DES_VALOR_CONDOMINIO_ATE", precision = 53, scale = 0)
	public Double getImoDesValorCondominioAte() {
		return this.imoDesValorCondominioAte;
	}

	public void setImoDesValorCondominioAte(Double imoDesValorCondominioAte) {
		this.imoDesValorCondominioAte = imoDesValorCondominioAte;
	}

	@Column(name = "IMO_DES_OBSERVACAO", length = 250)
	public String getImoDesObservacao() {
		return this.imoDesObservacao;
	}

	public void setImoDesObservacao(String imoDesObservacao) {
		this.imoDesObservacao = imoDesObservacao;
	}

	@Column(name = "IMO_DES_VALOR_ALUGUEL_DE", precision = 53, scale = 0)
	public Double getImoDesValorAluguelDe() {
		return this.imoDesValorAluguelDe;
	}

	public void setImoDesValorAluguelDe(Double imoDesValorAluguelDe) {
		this.imoDesValorAluguelDe = imoDesValorAluguelDe;
	}

	@Column(name = "IMO_DES_VALOR_ALUGUEL_ATE", precision = 53, scale = 0)
	public Double getImoDesValorAluguelAte() {
		return this.imoDesValorAluguelAte;
	}

	public void setImoDesValorAluguelAte(Double imoDesValorAluguelAte) {
		this.imoDesValorAluguelAte = imoDesValorAluguelAte;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovelDesejado")
	@NotAudited
	public Set<CaracteristicasImovelDesejado> getCaracteristicasImovelDesejados() {
		return this.caracteristicasImovelDesejados;
	}

	public void setCaracteristicasImovelDesejados(
			Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados) {
		this.caracteristicasImovelDesejados = caracteristicasImovelDesejados;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((caracteristicasImovelDesejados == null) ? 0
						: caracteristicasImovelDesejados.hashCode());
		result = prime
				* result
				+ ((enderecoImovelDesejado == null) ? 0
						: enderecoImovelDesejado.hashCode());
		result = prime
				* result
				+ ((imoDesAreaImovelAte == null) ? 0 : imoDesAreaImovelAte
						.hashCode());
		result = prime
				* result
				+ ((imoDesAreaImovelDe == null) ? 0 : imoDesAreaImovelDe
						.hashCode());
		result = prime
				* result
				+ ((imoDesAreaTerrenoAte == null) ? 0 : imoDesAreaTerrenoAte
						.hashCode());
		result = prime
				* result
				+ ((imoDesAreaTerrenoDe == null) ? 0 : imoDesAreaTerrenoDe
						.hashCode());
		result = prime
				* result
				+ ((imoDesDataCadastro == null) ? 0 : imoDesDataCadastro
						.hashCode());
		result = prime
				* result
				+ ((imoDesDataConstrucao == null) ? 0 : imoDesDataConstrucao
						.hashCode());
		result = prime * result + imoDesId;
		result = prime * result
				+ ((imoDesLocacao == null) ? 0 : imoDesLocacao.hashCode());
		result = prime
				* result
				+ ((imoDesObservacao == null) ? 0 : imoDesObservacao.hashCode());
		result = prime
				* result
				+ ((imoDesQuartosAte == null) ? 0 : imoDesQuartosAte.hashCode());
		result = prime * result
				+ ((imoDesQuartosDe == null) ? 0 : imoDesQuartosDe.hashCode());
		result = prime
				* result
				+ ((imoDesValorAluguelAte == null) ? 0 : imoDesValorAluguelAte
						.hashCode());
		result = prime
				* result
				+ ((imoDesValorAluguelDe == null) ? 0 : imoDesValorAluguelDe
						.hashCode());
		result = prime
				* result
				+ ((imoDesValorCondominioAte == null) ? 0
						: imoDesValorCondominioAte.hashCode());
		result = prime
				* result
				+ ((imoDesValorCondominioDe == null) ? 0
						: imoDesValorCondominioDe.hashCode());
		result = prime
				* result
				+ ((imoDesValorMercadoAte == null) ? 0 : imoDesValorMercadoAte
						.hashCode());
		result = prime
				* result
				+ ((imoDesValorMercadoDe == null) ? 0 : imoDesValorMercadoDe
						.hashCode());
		result = prime * result
				+ ((imoDesVenda == null) ? 0 : imoDesVenda.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result
				+ ((tipoimovel == null) ? 0 : tipoimovel.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ImovelDesejado other = (ImovelDesejado) obj;
		if (caracteristicasImovelDesejados == null) {
			if (other.caracteristicasImovelDesejados != null)
				return false;
		} else if (!caracteristicasImovelDesejados
				.equals(other.caracteristicasImovelDesejados))
			return false;
		if (enderecoImovelDesejado == null) {
			if (other.enderecoImovelDesejado != null)
				return false;
		} else if (!enderecoImovelDesejado.equals(other.enderecoImovelDesejado))
			return false;
		if (imoDesAreaImovelAte == null) {
			if (other.imoDesAreaImovelAte != null)
				return false;
		} else if (!imoDesAreaImovelAte.equals(other.imoDesAreaImovelAte))
			return false;
		if (imoDesAreaImovelDe == null) {
			if (other.imoDesAreaImovelDe != null)
				return false;
		} else if (!imoDesAreaImovelDe.equals(other.imoDesAreaImovelDe))
			return false;
		if (imoDesAreaTerrenoAte == null) {
			if (other.imoDesAreaTerrenoAte != null)
				return false;
		} else if (!imoDesAreaTerrenoAte.equals(other.imoDesAreaTerrenoAte))
			return false;
		if (imoDesAreaTerrenoDe == null) {
			if (other.imoDesAreaTerrenoDe != null)
				return false;
		} else if (!imoDesAreaTerrenoDe.equals(other.imoDesAreaTerrenoDe))
			return false;
		if (imoDesDataCadastro == null) {
			if (other.imoDesDataCadastro != null)
				return false;
		} else if (!imoDesDataCadastro.equals(other.imoDesDataCadastro))
			return false;
		if (imoDesDataConstrucao == null) {
			if (other.imoDesDataConstrucao != null)
				return false;
		} else if (!imoDesDataConstrucao.equals(other.imoDesDataConstrucao))
			return false;
		if (imoDesId != other.imoDesId)
			return false;
		if (imoDesLocacao == null) {
			if (other.imoDesLocacao != null)
				return false;
		} else if (!imoDesLocacao.equals(other.imoDesLocacao))
			return false;
		if (imoDesObservacao == null) {
			if (other.imoDesObservacao != null)
				return false;
		} else if (!imoDesObservacao.equals(other.imoDesObservacao))
			return false;
		if (imoDesQuartosAte == null) {
			if (other.imoDesQuartosAte != null)
				return false;
		} else if (!imoDesQuartosAte.equals(other.imoDesQuartosAte))
			return false;
		if (imoDesQuartosDe == null) {
			if (other.imoDesQuartosDe != null)
				return false;
		} else if (!imoDesQuartosDe.equals(other.imoDesQuartosDe))
			return false;
		if (imoDesValorAluguelAte == null) {
			if (other.imoDesValorAluguelAte != null)
				return false;
		} else if (!imoDesValorAluguelAte.equals(other.imoDesValorAluguelAte))
			return false;
		if (imoDesValorAluguelDe == null) {
			if (other.imoDesValorAluguelDe != null)
				return false;
		} else if (!imoDesValorAluguelDe.equals(other.imoDesValorAluguelDe))
			return false;
		if (imoDesValorCondominioAte == null) {
			if (other.imoDesValorCondominioAte != null)
				return false;
		} else if (!imoDesValorCondominioAte
				.equals(other.imoDesValorCondominioAte))
			return false;
		if (imoDesValorCondominioDe == null) {
			if (other.imoDesValorCondominioDe != null)
				return false;
		} else if (!imoDesValorCondominioDe
				.equals(other.imoDesValorCondominioDe))
			return false;
		if (imoDesValorMercadoAte == null) {
			if (other.imoDesValorMercadoAte != null)
				return false;
		} else if (!imoDesValorMercadoAte.equals(other.imoDesValorMercadoAte))
			return false;
		if (imoDesValorMercadoDe == null) {
			if (other.imoDesValorMercadoDe != null)
				return false;
		} else if (!imoDesValorMercadoDe.equals(other.imoDesValorMercadoDe))
			return false;
		if (imoDesVenda == null) {
			if (other.imoDesVenda != null)
				return false;
		} else if (!imoDesVenda.equals(other.imoDesVenda))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (tipoimovel == null) {
			if (other.tipoimovel != null)
				return false;
		} else if (!tipoimovel.equals(other.tipoimovel))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ImovelDesejado [imoDesId=" + imoDesId + "]";
	}

}
