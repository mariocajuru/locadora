package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Tipoimovel generated by hbm2java
 */
@Audited
@Entity
@Table(name = "TIPOIMOVEL", catalog = "renovarsistemas")
@AuditTable(value="TIPOIMOVEL", schema="log", catalog="renovarsistemas")
public class Tipoimovel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6312575211960133212L;
	private int tipId;
	private String tipNome;
	private String tipDescricao;
	private Set<ImovelDesejado> imovelDesejados = new HashSet<ImovelDesejado>(0);
	private Set<Imovel> imovels = new HashSet<Imovel>(0);

	public Tipoimovel() {
	}

	public Tipoimovel(int tipId, String tipNome) {
		this.tipId = tipId;
		this.tipNome = tipNome;
	}

	public Tipoimovel(int tipId, String tipNome, String tipDescricao,
			Set<ImovelDesejado> imovelDesejados, Set<Imovel> imovels) {
		this.tipId = tipId;
		this.tipNome = tipNome;
		this.tipDescricao = tipDescricao;
		this.imovelDesejados = imovelDesejados;
		this.imovels = imovels;
	}

	@Id
	@GeneratedValue
	@Column(name = "TIP_ID", unique = true, nullable = false)
	public int getTipId() {
		return this.tipId;
	}

	public void setTipId(int tipId) {
		this.tipId = tipId;
	}

	@Column(name = "TIP_NOME", nullable = false, length = 50)
	public String getTipNome() {
		return this.tipNome;
	}

	public void setTipNome(String tipNome) {
		this.tipNome = tipNome;
	}

	@Column(name = "TIP_DESCRICAO", length = 120)
	public String getTipDescricao() {
		return this.tipDescricao;
	}

	public void setTipDescricao(String tipDescricao) {
		this.tipDescricao = tipDescricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoimovel")
	@NotAudited
	public Set<ImovelDesejado> getImovelDesejados() {
		return this.imovelDesejados;
	}

	public void setImovelDesejados(Set<ImovelDesejado> imovelDesejados) {
		this.imovelDesejados = imovelDesejados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoimovel")
	@NotAudited
	public Set<Imovel> getImovels() {
		return this.imovels;
	}

	public void setImovels(Set<Imovel> imovels) {
		this.imovels = imovels;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((imovelDesejados == null) ? 0 : imovelDesejados.hashCode());
		result = prime * result + ((imovels == null) ? 0 : imovels.hashCode());
		result = prime * result
				+ ((tipDescricao == null) ? 0 : tipDescricao.hashCode());
		result = prime * result + tipId;
		result = prime * result + ((tipNome == null) ? 0 : tipNome.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Tipoimovel other = (Tipoimovel) obj;
		if (imovelDesejados == null) {
			if (other.imovelDesejados != null)
				return false;
		} else if (!imovelDesejados.equals(other.imovelDesejados))
			return false;
		if (imovels == null) {
			if (other.imovels != null)
				return false;
		} else if (!imovels.equals(other.imovels))
			return false;
		if (tipDescricao == null) {
			if (other.tipDescricao != null)
				return false;
		} else if (!tipDescricao.equals(other.tipDescricao))
			return false;
		if (tipId != other.tipId)
			return false;
		if (tipNome == null) {
			if (other.tipNome != null)
				return false;
		} else if (!tipNome.equals(other.tipNome))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Tipoimovel [tipId=" + tipId + "]";
	}

}
