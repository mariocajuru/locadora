package br.com.locadora.modelo;

// Generated 14/05/2014 10:34:22 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * FormaPagamento generated by hbm2java
 */
@Audited
@Entity
@Table(name = "FORMA_PAGAMENTO", catalog = "renovarsistemas")
@AuditTable(value="FORMA_PAGAMENTO", schema="log", catalog="renovarsistemas")
public class FormaPagamento implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3028652752622933601L;
	private int forPagId;
	private String forPagNome;
	private Set<DadosBancariosProprietario> dadosBancariosProprietarios = new HashSet<DadosBancariosProprietario>(
			0);

	public FormaPagamento() {
	}

	public FormaPagamento(int forPagId) {
		this.forPagId = forPagId;
	}

	public FormaPagamento(int forPagId, String forPagNome,
			Set<DadosBancariosProprietario> dadosBancariosProprietarios) {
		this.forPagId = forPagId;
		this.forPagNome = forPagNome;
		this.dadosBancariosProprietarios = dadosBancariosProprietarios;
	}

	@Id
	@GeneratedValue
	@Column(name = "FOR_PAG_ID", unique = true, nullable = false)
	public int getForPagId() {
		return this.forPagId;
	}

	public void setForPagId(int forPagId) {
		this.forPagId = forPagId;
	}

	@Column(name = "FOR_PAG_NOME", length = 50)
	public String getForPagNome() {
		return this.forPagNome;
	}

	public void setForPagNome(String forPagNome) {
		this.forPagNome = forPagNome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formaPagamento")
	@NotAudited
	public Set<DadosBancariosProprietario> getDadosBancariosProprietarios() {
		return this.dadosBancariosProprietarios;
	}

	public void setDadosBancariosProprietarios(
			Set<DadosBancariosProprietario> dadosBancariosProprietarios) {
		this.dadosBancariosProprietarios = dadosBancariosProprietarios;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((dadosBancariosProprietarios == null) ? 0
						: dadosBancariosProprietarios.hashCode());
		result = prime * result + forPagId;
		result = prime * result
				+ ((forPagNome == null) ? 0 : forPagNome.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		FormaPagamento other = (FormaPagamento) obj;
		if (dadosBancariosProprietarios == null) {
			if (other.dadosBancariosProprietarios != null)
				return false;
		} else if (!dadosBancariosProprietarios
				.equals(other.dadosBancariosProprietarios))
			return false;
		if (forPagId != other.forPagId)
			return false;
		if (forPagNome == null) {
			if (other.forPagNome != null)
				return false;
		} else if (!forPagNome.equals(other.forPagNome))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "FormaPagamento [forPagId=" + forPagId + "]";
	}

}
