package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Endereco generated by hbm2java
 */
@Audited
@Entity
@Table(name = "ENDERECO", catalog = "renovarsistemas")
@AuditTable(value="ENDERECO", schema="log", catalog="renovarsistemas")
public class Endereco implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 361072536699826792L;
	private int endId;
	private Pessoa pessoa;
	private Bairro bairro;
	private Cidade cidade;
	private Filial filial;
	private String endNome;
	private String endCep;
	private Integer endNumero;
	private String endComplemento;
	private String endPontoreferencial;
	private Character endZona;
	private Date endDataCadastro;
	private String endEdificio;
	private String endLatitude;
	private String endLongitude;
	private Integer endNumeroApartamento;
	private Set<Pessoa> pessoas = new HashSet<Pessoa>(0);
	private Set<Filial> filials = new HashSet<Filial>(0);
	private Set<Imovel> imovels = new HashSet<Imovel>(0);

	public Endereco() {
	}

	public Endereco(int endId, Bairro bairro, Cidade cidade, String endNome) {
		this.endId = endId;
		this.bairro = bairro;
		this.cidade = cidade;
		this.endNome = endNome;
	}

	public Endereco(int endId, Pessoa pessoa, Bairro bairro, Cidade cidade,
			Filial filial, String endNome, String endCep, Integer endNumero,
			String endComplemento, String endPontoreferencial,
			Character endZona, Date endDataCadastro, String endEdificio,
			String endLatitude, String endLongitude,
			Integer endNumeroApartamento, Set<Pessoa> pessoas,
			Set<Filial> filials, Set<Imovel> imovels) {
		this.endId = endId;
		this.pessoa = pessoa;
		this.bairro = bairro;
		this.cidade = cidade;
		this.filial = filial;
		this.endNome = endNome;
		this.endCep = endCep;
		this.endNumero = endNumero;
		this.endComplemento = endComplemento;
		this.endPontoreferencial = endPontoreferencial;
		this.endZona = endZona;
		this.endDataCadastro = endDataCadastro;
		this.endEdificio = endEdificio;
		this.endLatitude = endLatitude;
		this.endLongitude = endLongitude;
		this.endNumeroApartamento = endNumeroApartamento;
		this.pessoas = pessoas;
		this.filials = filials;
		this.imovels = imovels;
	}

	@Id
	@GeneratedValue
	@Column(name = "END_ID", unique = true, nullable = false)
	public int getEndId() {
		return this.endId;
	}

	public void setEndId(int endId) {
		this.endId = endId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID")
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BAI_ID", nullable = false)
	public Bairro getBairro() {
		return this.bairro;
	}

	public void setBairro(Bairro bairro) {
		this.bairro = bairro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_ID", nullable = false)
	public Cidade getCidade() {
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {
		this.cidade = cidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIL_ID")
	public Filial getFilial() {
		return this.filial;
	}

	public void setFilial(Filial filial) {
		this.filial = filial;
	}

	@Column(name = "END_NOME", nullable = false, length = 150)
	public String getEndNome() {
		return this.endNome;
	}

	public void setEndNome(String endNome) {
		this.endNome = endNome;
	}

	@Column(name = "END_CEP", length = 9)
	public String getEndCep() {
		return this.endCep;
	}

	public void setEndCep(String endCep) {
		this.endCep = endCep;
	}

	@Column(name = "END_NUMERO")
	public Integer getEndNumero() {
		return this.endNumero;
	}

	public void setEndNumero(Integer endNumero) {
		this.endNumero = endNumero;
	}

	@Column(name = "END_COMPLEMENTO", length = 30)
	public String getEndComplemento() {
		return this.endComplemento;
	}

	public void setEndComplemento(String endComplemento) {
		this.endComplemento = endComplemento;
	}

	@Column(name = "END_PONTOREFERENCIAL", length = 30)
	public String getEndPontoreferencial() {
		return this.endPontoreferencial;
	}

	public void setEndPontoreferencial(String endPontoreferencial) {
		this.endPontoreferencial = endPontoreferencial;
	}

	@Column(name = "END_ZONA", length = 1)
	public Character getEndZona() {
		return this.endZona;
	}

	public void setEndZona(Character endZona) {
		this.endZona = endZona;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_DATA_CADASTRO", length = 23)
	public Date getEndDataCadastro() {
		return this.endDataCadastro;
	}

	public void setEndDataCadastro(Date endDataCadastro) {
		this.endDataCadastro = endDataCadastro;
	}

	@Column(name = "END_EDIFICIO", length = 70)
	public String getEndEdificio() {
		return this.endEdificio;
	}

	public void setEndEdificio(String endEdificio) {
		this.endEdificio = endEdificio;
	}

	@Column(name = "END_LATITUDE", length = 40)
	public String getEndLatitude() {
		return this.endLatitude;
	}

	public void setEndLatitude(String endLatitude) {
		this.endLatitude = endLatitude;
	}

	@Column(name = "END_LONGITUDE", length = 40)
	public String getEndLongitude() {
		return this.endLongitude;
	}

	public void setEndLongitude(String endLongitude) {
		this.endLongitude = endLongitude;
	}

	@Column(name = "END_NUMERO_APARTAMENTO")
	public Integer getEndNumeroApartamento() {
		return this.endNumeroApartamento;
	}

	public void setEndNumeroApartamento(Integer endNumeroApartamento) {
		this.endNumeroApartamento = endNumeroApartamento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "endereco")
	@NotAudited
	public Set<Pessoa> getPessoas() {
		return this.pessoas;
	}

	public void setPessoas(Set<Pessoa> pessoas) {
		this.pessoas = pessoas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "endereco")
	@NotAudited
	public Set<Filial> getFilials() {
		return this.filials;
	}

	public void setFilials(Set<Filial> filials) {
		this.filials = filials;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "endereco")
	@NotAudited
	public Set<Imovel> getImovels() {
		return this.imovels;
	}

	public void setImovels(Set<Imovel> imovels) {
		this.imovels = imovels;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bairro == null) ? 0 : bairro.hashCode());
		result = prime * result + ((cidade == null) ? 0 : cidade.hashCode());
		result = prime * result + ((endCep == null) ? 0 : endCep.hashCode());
		result = prime * result
				+ ((endComplemento == null) ? 0 : endComplemento.hashCode());
		result = prime * result
				+ ((endDataCadastro == null) ? 0 : endDataCadastro.hashCode());
		result = prime * result
				+ ((endEdificio == null) ? 0 : endEdificio.hashCode());
		result = prime * result + endId;
		result = prime * result
				+ ((endLatitude == null) ? 0 : endLatitude.hashCode());
		result = prime * result
				+ ((endLongitude == null) ? 0 : endLongitude.hashCode());
		result = prime * result + ((endNome == null) ? 0 : endNome.hashCode());
		result = prime * result
				+ ((endNumero == null) ? 0 : endNumero.hashCode());
		result = prime
				* result
				+ ((endNumeroApartamento == null) ? 0 : endNumeroApartamento
						.hashCode());
		result = prime
				* result
				+ ((endPontoreferencial == null) ? 0 : endPontoreferencial
						.hashCode());
		result = prime * result + ((endZona == null) ? 0 : endZona.hashCode());
		result = prime * result + ((filial == null) ? 0 : filial.hashCode());
		result = prime * result + ((filials == null) ? 0 : filials.hashCode());
		result = prime * result + ((imovels == null) ? 0 : imovels.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result + ((pessoas == null) ? 0 : pessoas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Endereco other = (Endereco) obj;
		if (bairro == null) {
			if (other.bairro != null)
				return false;
		} else if (!bairro.equals(other.bairro))
			return false;
		if (cidade == null) {
			if (other.cidade != null)
				return false;
		} else if (!cidade.equals(other.cidade))
			return false;
		if (endCep == null) {
			if (other.endCep != null)
				return false;
		} else if (!endCep.equals(other.endCep))
			return false;
		if (endComplemento == null) {
			if (other.endComplemento != null)
				return false;
		} else if (!endComplemento.equals(other.endComplemento))
			return false;
		if (endDataCadastro == null) {
			if (other.endDataCadastro != null)
				return false;
		} else if (!endDataCadastro.equals(other.endDataCadastro))
			return false;
		if (endEdificio == null) {
			if (other.endEdificio != null)
				return false;
		} else if (!endEdificio.equals(other.endEdificio))
			return false;
		if (endId != other.endId)
			return false;
		if (endLatitude == null) {
			if (other.endLatitude != null)
				return false;
		} else if (!endLatitude.equals(other.endLatitude))
			return false;
		if (endLongitude == null) {
			if (other.endLongitude != null)
				return false;
		} else if (!endLongitude.equals(other.endLongitude))
			return false;
		if (endNome == null) {
			if (other.endNome != null)
				return false;
		} else if (!endNome.equals(other.endNome))
			return false;
		if (endNumero == null) {
			if (other.endNumero != null)
				return false;
		} else if (!endNumero.equals(other.endNumero))
			return false;
		if (endNumeroApartamento == null) {
			if (other.endNumeroApartamento != null)
				return false;
		} else if (!endNumeroApartamento.equals(other.endNumeroApartamento))
			return false;
		if (endPontoreferencial == null) {
			if (other.endPontoreferencial != null)
				return false;
		} else if (!endPontoreferencial.equals(other.endPontoreferencial))
			return false;
		if (endZona == null) {
			if (other.endZona != null)
				return false;
		} else if (!endZona.equals(other.endZona))
			return false;
		if (filial == null) {
			if (other.filial != null)
				return false;
		} else if (!filial.equals(other.filial))
			return false;
		if (filials == null) {
			if (other.filials != null)
				return false;
		} else if (!filials.equals(other.filials))
			return false;
		if (imovels == null) {
			if (other.imovels != null)
				return false;
		} else if (!imovels.equals(other.imovels))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (pessoas == null) {
			if (other.pessoas != null)
				return false;
		} else if (!pessoas.equals(other.pessoas))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Endereco [endId=" + endId + "]";
	}

}
