package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * Referenciapessoal generated by hbm2java
 */
@Audited
@Entity
@Table(name = "REFERENCIAPESSOAL", catalog = "renovarsistemas")
@AuditTable(value="REFERENCIAPESSOAL", schema="log", catalog="renovarsistemas")
public class Referenciapessoal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5439998951853072918L;
	private int refId;
	private Pessoa pessoa;
	private String refNome;
	private String refTelefone1;
	private String refTefefone2;
	private String refTefefone3;
	private String refEmail1;
	private String refEmail2;
	private String refContato;
	private String refTipo;

	public Referenciapessoal() {
	}

	public Referenciapessoal(int refId, Pessoa pessoa, String refNome) {
		this.refId = refId;
		this.pessoa = pessoa;
		this.refNome = refNome;
	}

	public Referenciapessoal(int refId, Pessoa pessoa, String refNome,
			String refTelefone1, String refTefefone2, String refTefefone3,
			String refEmail1, String refEmail2, String refContato,
			String refTipo) {
		this.refId = refId;
		this.pessoa = pessoa;
		this.refNome = refNome;
		this.refTelefone1 = refTelefone1;
		this.refTefefone2 = refTefefone2;
		this.refTefefone3 = refTefefone3;
		this.refEmail1 = refEmail1;
		this.refEmail2 = refEmail2;
		this.refContato = refContato;
		this.refTipo = refTipo;
	}

	@Id
	@GeneratedValue
	@Column(name = "REF_ID", unique = true, nullable = false)
	public int getRefId() {
		return this.refId;
	}

	public void setRefId(int refId) {
		this.refId = refId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "REF_NOME", nullable = false, length = 80)
	public String getRefNome() {
		return this.refNome;
	}

	public void setRefNome(String refNome) {
		this.refNome = refNome;
	}

	@Column(name = "REF_TELEFONE1", length = 16)
	public String getRefTelefone1() {
		return this.refTelefone1;
	}

	public void setRefTelefone1(String refTelefone1) {
		this.refTelefone1 = refTelefone1;
	}

	@Column(name = "REF_TEFEFONE2", length = 16)
	public String getRefTefefone2() {
		return this.refTefefone2;
	}

	public void setRefTefefone2(String refTefefone2) {
		this.refTefefone2 = refTefefone2;
	}

	@Column(name = "REF_TEFEFONE3", length = 16)
	public String getRefTefefone3() {
		return this.refTefefone3;
	}

	public void setRefTefefone3(String refTefefone3) {
		this.refTefefone3 = refTefefone3;
	}

	@Column(name = "REF_EMAIL1", length = 30)
	public String getRefEmail1() {
		return this.refEmail1;
	}

	public void setRefEmail1(String refEmail1) {
		this.refEmail1 = refEmail1;
	}

	@Column(name = "REF_EMAIL2", length = 30)
	public String getRefEmail2() {
		return this.refEmail2;
	}

	public void setRefEmail2(String refEmail2) {
		this.refEmail2 = refEmail2;
	}

	@Column(name = "REF_CONTATO", length = 80)
	public String getRefContato() {
		return this.refContato;
	}

	public void setRefContato(String refContato) {
		this.refContato = refContato;
	}

	@Column(name = "REF_TIPO", length = 30)
	public String getRefTipo() {
		return this.refTipo;
	}

	public void setRefTipo(String refTipo) {
		this.refTipo = refTipo;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result
				+ ((refContato == null) ? 0 : refContato.hashCode());
		result = prime * result
				+ ((refEmail1 == null) ? 0 : refEmail1.hashCode());
		result = prime * result
				+ ((refEmail2 == null) ? 0 : refEmail2.hashCode());
		result = prime * result + refId;
		result = prime * result + ((refNome == null) ? 0 : refNome.hashCode());
		result = prime * result
				+ ((refTefefone2 == null) ? 0 : refTefefone2.hashCode());
		result = prime * result
				+ ((refTefefone3 == null) ? 0 : refTefefone3.hashCode());
		result = prime * result
				+ ((refTelefone1 == null) ? 0 : refTelefone1.hashCode());
		result = prime * result + ((refTipo == null) ? 0 : refTipo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Referenciapessoal other = (Referenciapessoal) obj;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (refContato == null) {
			if (other.refContato != null)
				return false;
		} else if (!refContato.equals(other.refContato))
			return false;
		if (refEmail1 == null) {
			if (other.refEmail1 != null)
				return false;
		} else if (!refEmail1.equals(other.refEmail1))
			return false;
		if (refEmail2 == null) {
			if (other.refEmail2 != null)
				return false;
		} else if (!refEmail2.equals(other.refEmail2))
			return false;
		if (refId != other.refId)
			return false;
		if (refNome == null) {
			if (other.refNome != null)
				return false;
		} else if (!refNome.equals(other.refNome))
			return false;
		if (refTefefone2 == null) {
			if (other.refTefefone2 != null)
				return false;
		} else if (!refTefefone2.equals(other.refTefefone2))
			return false;
		if (refTefefone3 == null) {
			if (other.refTefefone3 != null)
				return false;
		} else if (!refTefefone3.equals(other.refTefefone3))
			return false;
		if (refTelefone1 == null) {
			if (other.refTelefone1 != null)
				return false;
		} else if (!refTelefone1.equals(other.refTelefone1))
			return false;
		if (refTipo == null) {
			if (other.refTipo != null)
				return false;
		} else if (!refTipo.equals(other.refTipo))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Referenciapessoal [refId=" + refId + "]";
	}

}
