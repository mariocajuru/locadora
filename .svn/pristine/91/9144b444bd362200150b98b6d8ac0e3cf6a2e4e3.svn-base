package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Bairro generated by hbm2java
 */
@Audited
@Entity
@Table(name = "BAIRRO", catalog = "renovarsistemas")
@AuditTable(value="BAIRRO", schema="log", catalog="renovarsistemas")
public class Bairro implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7468070699878118788L;
	private int baiId;
	private Regiao regiao;
	private String baiNome;
	private Set<Endereco> enderecos = new HashSet<Endereco>(0);
	private Set<EnderecoImovelDesejado> enderecoImovelDesejados = new HashSet<EnderecoImovelDesejado>(
			0);

	public Bairro() {
	}

	public Bairro(int baiId, Regiao regiao, String baiNome) {
		this.baiId = baiId;
		this.regiao = regiao;
		this.baiNome = baiNome;
	}

	public Bairro(int baiId, Regiao regiao, String baiNome,
			Set<Endereco> enderecos,
			Set<EnderecoImovelDesejado> enderecoImovelDesejados) {
		this.baiId = baiId;
		this.regiao = regiao;
		this.baiNome = baiNome;
		this.enderecos = enderecos;
		this.enderecoImovelDesejados = enderecoImovelDesejados;
	}

	@Id
	@GeneratedValue
	@Column(name = "BAI_ID", unique = true, nullable = false)
	public int getBaiId() {
		return this.baiId;
	}

	public void setBaiId(int baiId) {
		this.baiId = baiId;
	}
	//depois fazer @Audited(withModifiedFlag=false,targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REG_ID")
	public Regiao getRegiao() {
		return this.regiao;
	}

	public void setRegiao(Regiao regiao) {
		this.regiao = regiao;
	}

	@Column(name = "BAI_NOME",unique=true, nullable = false, length = 150)
	public String getBaiNome() {
		return this.baiNome;
	}

	public void setBaiNome(String baiNome) {
		this.baiNome = baiNome;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bairro")
	@NotAudited
	public Set<Endereco> getEnderecos() {
		return this.enderecos;
	}

	public void setEnderecos(Set<Endereco> enderecos) {
		this.enderecos = enderecos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bairro")
	@NotAudited
	public Set<EnderecoImovelDesejado> getEnderecoImovelDesejados() {
		return this.enderecoImovelDesejados;
	}

	public void setEnderecoImovelDesejados(
			Set<EnderecoImovelDesejado> enderecoImovelDesejados) {
		this.enderecoImovelDesejados = enderecoImovelDesejados;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + baiId;
		result = prime * result + ((baiNome == null) ? 0 : baiNome.hashCode());
		result = prime
				* result
				+ ((enderecoImovelDesejados == null) ? 0
						: enderecoImovelDesejados.hashCode());
		result = prime * result
				+ ((enderecos == null) ? 0 : enderecos.hashCode());
		result = prime * result + ((regiao == null) ? 0 : regiao.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bairro other = (Bairro) obj;
		if (baiId != other.baiId)
			return false;
		if (baiNome == null) {
			if (other.baiNome != null)
				return false;
		} else if (!baiNome.equals(other.baiNome))
			return false;
		if (enderecoImovelDesejados == null) {
			if (other.enderecoImovelDesejados != null)
				return false;
		} else if (!enderecoImovelDesejados
				.equals(other.enderecoImovelDesejados))
			return false;
		if (enderecos == null) {
			if (other.enderecos != null)
				return false;
		} else if (!enderecos.equals(other.enderecos))
			return false;
		if (regiao == null) {
			if (other.regiao != null)
				return false;
		} else if (!regiao.equals(other.regiao))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Bairro [baiId=" + baiId + "]";
	}

}
