package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Caracteristicas generated by hbm2java
 */
@Audited
@Entity
@Table(name = "CARACTERISTICAS", catalog = "renovarsistemas")
@AuditTable(value="CARACTERISTICAS", schema="log", catalog="renovarsistemas")
public class Caracteristicas implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4403126151309482291L;
	private int carId;
	private String carNome;
	private String carDescricao;
	private Boolean carUnitario;
	private Set<ImovelCaracteristicas> imovelCaracteristicases = new HashSet<ImovelCaracteristicas>(
			0);
	private Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados = new HashSet<CaracteristicasImovelDesejado>(
			0);

	public Caracteristicas() {
	}

	public Caracteristicas(int carId, String carNome) {
		this.carId = carId;
		this.carNome = carNome;
	}

	public Caracteristicas(int carId, String carNome, String carDescricao,
			Boolean carUnitario,
			Set<ImovelCaracteristicas> imovelCaracteristicases,
			Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados) {
		this.carId = carId;
		this.carNome = carNome;
		this.carDescricao = carDescricao;
		this.carUnitario = carUnitario;
		this.imovelCaracteristicases = imovelCaracteristicases;
		this.caracteristicasImovelDesejados = caracteristicasImovelDesejados;
	}

	@Id
	@GeneratedValue
	@Column(name = "CAR_ID", unique = true, nullable = false)
	public int getCarId() {
		return this.carId;
	}

	public void setCarId(int carId) {
		this.carId = carId;
	}

	@Column(name = "CAR_NOME",unique=true, nullable = false, length = 50)
	public String getCarNome() {
		return this.carNome;
	}

	public void setCarNome(String carNome) {
		this.carNome = carNome;
	}

	@Column(name = "CAR_DESCRICAO", length = 100)
	public String getCarDescricao() {
		return this.carDescricao;
	}

	public void setCarDescricao(String carDescricao) {
		this.carDescricao = carDescricao;
	}

	@Column(name = "CAR_UNITARIO")
	public Boolean getCarUnitario() {
		return this.carUnitario;
	}

	public void setCarUnitario(Boolean carUnitario) {
		this.carUnitario = carUnitario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "caracteristicas")
	@NotAudited
	public Set<ImovelCaracteristicas> getImovelCaracteristicases() {
		return this.imovelCaracteristicases;
	}

	public void setImovelCaracteristicases(
			Set<ImovelCaracteristicas> imovelCaracteristicases) {
		this.imovelCaracteristicases = imovelCaracteristicases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "caracteristicas")
	@NotAudited
	public Set<CaracteristicasImovelDesejado> getCaracteristicasImovelDesejados() {
		return this.caracteristicasImovelDesejados;
	}

	public void setCaracteristicasImovelDesejados(
			Set<CaracteristicasImovelDesejado> caracteristicasImovelDesejados) {
		this.caracteristicasImovelDesejados = caracteristicasImovelDesejados;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((carDescricao == null) ? 0 : carDescricao.hashCode());
		result = prime * result + carId;
		result = prime * result + ((carNome == null) ? 0 : carNome.hashCode());
		result = prime * result
				+ ((carUnitario == null) ? 0 : carUnitario.hashCode());
		result = prime
				* result
				+ ((caracteristicasImovelDesejados == null) ? 0
						: caracteristicasImovelDesejados.hashCode());
		result = prime
				* result
				+ ((imovelCaracteristicases == null) ? 0
						: imovelCaracteristicases.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Caracteristicas other = (Caracteristicas) obj;
		if (carDescricao == null) {
			if (other.carDescricao != null)
				return false;
		} else if (!carDescricao.equals(other.carDescricao))
			return false;
		if (carId != other.carId)
			return false;
		if (carNome == null) {
			if (other.carNome != null)
				return false;
		} else if (!carNome.equals(other.carNome))
			return false;
		if (carUnitario == null) {
			if (other.carUnitario != null)
				return false;
		} else if (!carUnitario.equals(other.carUnitario))
			return false;
		if (caracteristicasImovelDesejados == null) {
			if (other.caracteristicasImovelDesejados != null)
				return false;
		} else if (!caracteristicasImovelDesejados
				.equals(other.caracteristicasImovelDesejados))
			return false;
		if (imovelCaracteristicases == null) {
			if (other.imovelCaracteristicases != null)
				return false;
		} else if (!imovelCaracteristicases
				.equals(other.imovelCaracteristicases))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Caracteristicas [carId=" + carId + "]";
	}

}
