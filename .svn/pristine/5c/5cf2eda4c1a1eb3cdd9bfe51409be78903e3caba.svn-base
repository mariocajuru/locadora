package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * ImovelCaracteristicas generated by hbm2java
 */
@Audited
@Entity
@Table(name = "IMOVEL_CARACTERISTICAS", catalog = "renovarsistemas")
@AuditTable(value="IMOVEL_CARACTERISTICAS", schema="log", catalog="renovarsistemas")
public class ImovelCaracteristicas implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7940164500713305056L;
	private ImovelCaracteristicasId id;
	private Imovel imovel;
	private Caracteristicas caracteristicas;
	private Integer imoCarQtd;

	public ImovelCaracteristicas() {
	}

	public ImovelCaracteristicas(ImovelCaracteristicasId id, Imovel imovel,
			Caracteristicas caracteristicas) {
		this.id = id;
		this.imovel = imovel;
		this.caracteristicas = caracteristicas;
	}

	public ImovelCaracteristicas(ImovelCaracteristicasId id, Imovel imovel,
			Caracteristicas caracteristicas, Integer imoCarQtd) {
		this.id = id;
		this.imovel = imovel;
		this.caracteristicas = caracteristicas;
		this.imoCarQtd = imoCarQtd;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "imoId", column = @Column(name = "IMO_ID", nullable = false)),
			@AttributeOverride(name = "carId", column = @Column(name = "CAR_ID", nullable = false)) })
	public ImovelCaracteristicasId getId() {
		return this.id;
	}

	public void setId(ImovelCaracteristicasId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMO_ID", nullable = false, insertable = false, updatable = false)
	public Imovel getImovel() {
		return this.imovel;
	}

	public void setImovel(Imovel imovel) {
		this.imovel = imovel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAR_ID", nullable = false, insertable = false, updatable = false)
	public Caracteristicas getCaracteristicas() {
		return this.caracteristicas;
	}

	public void setCaracteristicas(Caracteristicas caracteristicas) {
		this.caracteristicas = caracteristicas;
	}

	@Column(name = "IMO_CAR_QTD")
	public Integer getImoCarQtd() {
		return this.imoCarQtd;
	}

	public void setImoCarQtd(Integer imoCarQtd) {
		this.imoCarQtd = imoCarQtd;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((caracteristicas == null) ? 0 : caracteristicas.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((imoCarQtd == null) ? 0 : imoCarQtd.hashCode());
		result = prime * result + ((imovel == null) ? 0 : imovel.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ImovelCaracteristicas other = (ImovelCaracteristicas) obj;
		if (caracteristicas == null) {
			if (other.caracteristicas != null)
				return false;
		} else if (!caracteristicas.equals(other.caracteristicas))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (imoCarQtd == null) {
			if (other.imoCarQtd != null)
				return false;
		} else if (!imoCarQtd.equals(other.imoCarQtd))
			return false;
		if (imovel == null) {
			if (other.imovel != null)
				return false;
		} else if (!imovel.equals(other.imovel))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ImovelCaracteristicas [id=" + id + "]";
	}

}
