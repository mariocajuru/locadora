package br.com.locadora.modelo;

// Generated 07/05/2014 15:18:01 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * Fiador generated by hbm2java
 */
@Audited
@Entity
@Table(name = "FIADOR", catalog = "renovarsistemas")
@AuditTable(value="FIADOR", schema="log", catalog="renovarsistemas")
public class Fiador implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3058716179673297831L;
	private int fiaId;
	private Pessoa pessoa;
	private String fiaCartorio;
	private String fiaTipoImovel;
	private String fiaNumeroRegistro;
	private Date fiaDataRegistro;
	private String fiaObservacao;
	private String fiaLocalTrabalho;
	private Double fiaRenda;
	private List<Locacao> locacaos = new ArrayList<Locacao>(0);

	public Fiador() {
	}

	public Fiador(int fiaId, Pessoa pessoa) {
		this.fiaId = fiaId;
		this.pessoa = pessoa;
	}

	public Fiador(int fiaId, Pessoa pessoa, String fiaCartorio,
			String fiaNumeroRegistro, Date fiaDataRegistro,String fiaTipoImovel,
			String fiaObservacao, String fiaLocalTrabalho, Double fiaRenda,
			List<Locacao> locacaos) {
		this.fiaId = fiaId;
		this.pessoa = pessoa;
		this.fiaCartorio = fiaCartorio;
		this.fiaNumeroRegistro = fiaNumeroRegistro;
		this.fiaDataRegistro = fiaDataRegistro;
		this.fiaObservacao = fiaObservacao;
		this.fiaLocalTrabalho = fiaLocalTrabalho;
		this.fiaRenda = fiaRenda;
		this.locacaos = locacaos;
		this.fiaTipoImovel=fiaTipoImovel;
	}

	@Id
	@GeneratedValue
	@Column(name = "FIA_ID", unique = true, nullable = false)
	public int getFiaId() {
		return this.fiaId;
	}

	public void setFiaId(int fiaId) {
		this.fiaId = fiaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "FIA_CARTORIO", length = 50)
	public String getFiaCartorio() {
		return this.fiaCartorio;
	}

	public void setFiaCartorio(String fiaCartorio) {
		this.fiaCartorio = fiaCartorio;
	}

	@Column(name = "FIA_NUMERO_REGISTRO", length = 50)
	public String getFiaNumeroRegistro() {
		return this.fiaNumeroRegistro;
	}

	public void setFiaNumeroRegistro(String fiaNumeroRegistro) {
		this.fiaNumeroRegistro = fiaNumeroRegistro;
	}
	
	@Column(name = "FIA_TIPO_IMOVEL", length = 60)
	public String getFiaTipoImovel() {
		return this.fiaTipoImovel;
	}

	public void setFiaTipoImovel(String fiaTipoImovel) {
		this.fiaTipoImovel = fiaTipoImovel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FIA_DATA_REGISTRO", length = 23)
	public Date getFiaDataRegistro() {
		return this.fiaDataRegistro;
	}

	public void setFiaDataRegistro(Date fiaDataRegistro) {
		this.fiaDataRegistro = fiaDataRegistro;
	}

	@Column(name = "FIA_OBSERVACAO", length = 250)
	public String getFiaObservacao() {
		return this.fiaObservacao;
	}

	public void setFiaObservacao(String fiaObservacao) {
		this.fiaObservacao = fiaObservacao;
	}

	@Column(name = "FIA_LOCAL_TRABALHO", length = 120)
	public String getFiaLocalTrabalho() {
		return this.fiaLocalTrabalho;
	}

	public void setFiaLocalTrabalho(String fiaLocalTrabalho) {
		this.fiaLocalTrabalho = fiaLocalTrabalho;
	}

	@Column(name = "FIA_RENDA", precision = 53, scale = 0)
	public Double getFiaRenda() {
		return this.fiaRenda;
	}

	public void setFiaRenda(Double fiaRenda) {
		this.fiaRenda = fiaRenda;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "FIADOR_LOCACAO", catalog = "renovarsistemas", joinColumns = { @JoinColumn(name = "FIA_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "LOC_ID", nullable = false, updatable = false) })
	public List<Locacao> getLocacaos() {
		return this.locacaos;
	}

	public void setLocacaos(List<Locacao> locacaos) {
		this.locacaos = locacaos;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((fiaCartorio == null) ? 0 : fiaCartorio.hashCode());
		result = prime * result
				+ ((fiaDataRegistro == null) ? 0 : fiaDataRegistro.hashCode());
		result = prime * result + fiaId;
		result = prime
				* result
				+ ((fiaLocalTrabalho == null) ? 0 : fiaLocalTrabalho.hashCode());
		result = prime
				* result
				+ ((fiaNumeroRegistro == null) ? 0 : fiaNumeroRegistro
						.hashCode());
		result = prime * result
				+ ((fiaObservacao == null) ? 0 : fiaObservacao.hashCode());
		result = prime * result
				+ ((fiaRenda == null) ? 0 : fiaRenda.hashCode());
		result = prime * result
				+ ((locacaos == null) ? 0 : locacaos.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Fiador other = (Fiador) obj;
		if (fiaCartorio == null) {
			if (other.fiaCartorio != null)
				return false;
		} else if (!fiaCartorio.equals(other.fiaCartorio))
			return false;
		if (fiaDataRegistro == null) {
			if (other.fiaDataRegistro != null)
				return false;
		} else if (!fiaDataRegistro.equals(other.fiaDataRegistro))
			return false;
		if (fiaId != other.fiaId)
			return false;
		if (fiaLocalTrabalho == null) {
			if (other.fiaLocalTrabalho != null)
				return false;
		} else if (!fiaLocalTrabalho.equals(other.fiaLocalTrabalho))
			return false;
		if (fiaNumeroRegistro == null) {
			if (other.fiaNumeroRegistro != null)
				return false;
		} else if (!fiaNumeroRegistro.equals(other.fiaNumeroRegistro))
			return false;
		if (fiaObservacao == null) {
			if (other.fiaObservacao != null)
				return false;
		} else if (!fiaObservacao.equals(other.fiaObservacao))
			return false;
		if (fiaRenda == null) {
			if (other.fiaRenda != null)
				return false;
		} else if (!fiaRenda.equals(other.fiaRenda))
			return false;
		if (locacaos == null) {
			if (other.locacaos != null)
				return false;
		} else if (!locacaos.equals(other.locacaos))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Fiador [fiaId=" + fiaId + "]";
	}

}
