package br.com.locadora.modelo;

// Generated 10/07/2014 16:00:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * GrupoDeContas generated by hbm2java
 */
@Audited
@Entity
@Table(name = "GRUPO_DE_CONTAS", catalog = "renovarsistemas")
@AuditTable(value="GRUPO_DE_CONTAS", schema="log", catalog="renovarsistemas")
public class GrupoDeContas implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -994700462938696232L;
	private int gruConId;
	private CentroDeCusto centroDeCusto;
	private String gruConNome;
	private Boolean gruConGerarAcumuloIr;
	private Boolean gruConCobrarAcrescimo;
	private Boolean gruConGerarDimob;
	private String gruConHistoricoPadrao;
	private Set<ContasFinanceiro> contasFinanceirosDebito = new HashSet<ContasFinanceiro>(
			0);
	private Set<PlanoDeContas> grupoContasJuros = new HashSet<PlanoDeContas>(0);
	private Set<PlanoDeContas> grupoContasMultas = new HashSet<PlanoDeContas>(0);
	private Set<ContasFinanceiro> contasFinanceirosCredito = new HashSet<ContasFinanceiro>(
			0);
	private Set<TipoDeParametro> tipoDeParametros = new HashSet<TipoDeParametro>(
			0);
	private Set<PlanoDeContas> grupoContasValorOriginal = new HashSet<PlanoDeContas>(0);
	private Set<ContaCorrente> contaCorrentes = new HashSet<ContaCorrente>(0);

	public GrupoDeContas() {
	}

	public GrupoDeContas(int gruConId, CentroDeCusto centroDeCusto) {
		this.gruConId = gruConId;
		this.centroDeCusto = centroDeCusto;
	}

	public GrupoDeContas(int gruConId, CentroDeCusto centroDeCusto,
			String gruConNome, Boolean gruConGerarAcumuloIr,
			Boolean gruConCobrarAcrescimo, Boolean gruConGerarDimob,
			String gruConHistoricoPadrao,
			Set<ContasFinanceiro> contasFinanceirosDebito,
			Set<PlanoDeContas> grupoContasJuros,
			Set<PlanoDeContas> grupoContasMultas,
			Set<TipoDeParametro> tipoDeParametros,
			Set<ContasFinanceiro> contasFinanceirosCredito,
			Set<PlanoDeContas> grupoContasValorOriginal,
			Set<ContaCorrente> contaCorrentes) {
		this.gruConId = gruConId;
		this.centroDeCusto = centroDeCusto;
		this.gruConNome = gruConNome;
		this.gruConGerarAcumuloIr = gruConGerarAcumuloIr;
		this.gruConCobrarAcrescimo = gruConCobrarAcrescimo;
		this.gruConGerarDimob = gruConGerarDimob;
		this.gruConHistoricoPadrao = gruConHistoricoPadrao;
		this.contasFinanceirosDebito = contasFinanceirosDebito;
		this.grupoContasJuros = grupoContasJuros;
		this.grupoContasMultas = grupoContasMultas;
		this.contasFinanceirosCredito = contasFinanceirosCredito;
		this.grupoContasValorOriginal = grupoContasValorOriginal;
		this.contaCorrentes = contaCorrentes;
		this.tipoDeParametros = tipoDeParametros;
	}

	@Id
	@GeneratedValue
	@Column(name = "GRU_CON_ID", unique = true, nullable = false)
	public int getGruConId() {
		return this.gruConId;
	}

	public void setGruConId(int gruConId) {
		this.gruConId = gruConId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CEN_CUS_ID", nullable = false)
	public CentroDeCusto getCentroDeCusto() {
		return this.centroDeCusto;
	}

	public void setCentroDeCusto(CentroDeCusto centroDeCusto) {
		this.centroDeCusto = centroDeCusto;
	}

	@Column(name = "GRU_CON_NOME", length = 60)
	public String getGruConNome() {
		return this.gruConNome;
	}

	public void setGruConNome(String gruConNome) {
		this.gruConNome = gruConNome;
	}

	@Column(name = "GRU_CON_GERAR_ACUMULO_IR")
	public Boolean getGruConGerarAcumuloIr() {
		return this.gruConGerarAcumuloIr;
	}

	public void setGruConGerarAcumuloIr(Boolean gruConGerarAcumuloIr) {
		this.gruConGerarAcumuloIr = gruConGerarAcumuloIr;
	}

	@Column(name = "GRU_CON_COBRAR_ACRESCIMO")
	public Boolean getGruConCobrarAcrescimo() {
		return this.gruConCobrarAcrescimo;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "grupoDeContas")
	@NotAudited
	public Set<TipoDeParametro> getTipoDeParametros() {
		return this.tipoDeParametros;
	}

	public void setTipoDeParametros(Set<TipoDeParametro> tipoDeParametros) {
		this.tipoDeParametros = tipoDeParametros;
	}
	public void setGruConCobrarAcrescimo(Boolean gruConCobrarAcrescimo) {
		this.gruConCobrarAcrescimo = gruConCobrarAcrescimo;
	}

	@Column(name = "GRU_CON_GERAR_DIMOB")
	public Boolean getGruConGerarDimob() {
		return this.gruConGerarDimob;
	}

	public void setGruConGerarDimob(Boolean gruConGerarDimob) {
		this.gruConGerarDimob = gruConGerarDimob;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "grupoDeContas")
	@NotAudited
	public Set<ContaCorrente> getContaCorrentes() {
		return this.contaCorrentes;
	}

	public void setContaCorrentes(Set<ContaCorrente> contaCorrentes) {
		this.contaCorrentes = contaCorrentes;
	}

	@Column(name = "GRU_CON_HISTORICO_PADRAO", length = 60)
	public String getGruConHistoricoPadrao() {
		return this.gruConHistoricoPadrao;
	}

	public void setGruConHistoricoPadrao(String gruConHistoricoPadrao) {
		this.gruConHistoricoPadrao = gruConHistoricoPadrao;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "grupoFinanceiroDebito")
	public Set<ContasFinanceiro> getContasFinanceirosDebito() {
		return this.contasFinanceirosDebito;
	}

	public void setContasFinanceirosDebito(Set<ContasFinanceiro> contasFinanceirosDebito) {
		this.contasFinanceirosDebito = contasFinanceirosDebito;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "GRUPO_CONTAS_JUROS", catalog = "renovarsistemas", joinColumns = { @JoinColumn(name = "GRU_CON_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "PLA_CON_ID", nullable = false, updatable = false) })
	public Set<PlanoDeContas> getGrupoContasJuros() {
		return this.grupoContasJuros;
	}

	public void setGrupoContasJuros(Set<PlanoDeContas> grupoContasJuros) {
		this.grupoContasJuros = grupoContasJuros;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "GRUPO_CONTAS_MULTAS", catalog = "renovarsistemas", joinColumns = { @JoinColumn(name = "GRU_CON_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "PLA_CON_ID", nullable = false, updatable = false) })
	public Set<PlanoDeContas> getGrupoContasMultas() {
		return this.grupoContasMultas;
	}

	public void setGrupoContasMultas(Set<PlanoDeContas> grupoContasMultas) {
		this.grupoContasMultas = grupoContasMultas;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "grupoFinanceiroCredito")
	public Set<ContasFinanceiro> getContasFinanceirosCredito() {
		return this.contasFinanceirosCredito;
	}

	public void setContasFinanceirosCredito(Set<ContasFinanceiro> contasFinanceirosCredito) {
		this.contasFinanceirosCredito = contasFinanceirosCredito;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "GRUPO_CONTAS_VALOR_ORIGINAL", catalog = "renovarsistemas", joinColumns = { @JoinColumn(name = "GRU_CON_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "PLA_CON_ID", nullable = false, updatable = false) })
	public Set<PlanoDeContas> getGrupoContasValorOriginal() {
		return this.grupoContasValorOriginal;
	}

	public void setGrupoContasValorOriginal(Set<PlanoDeContas> grupoContasValorOriginal) {
		this.grupoContasValorOriginal = grupoContasValorOriginal;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((centroDeCusto == null) ? 0 : centroDeCusto.hashCode());
		result = prime * result
				+ ((contaCorrentes == null) ? 0 : contaCorrentes.hashCode());
		result = prime
				* result
				+ ((contasFinanceirosCredito == null) ? 0
						: contasFinanceirosCredito.hashCode());
		result = prime
				* result
				+ ((contasFinanceirosDebito == null) ? 0
						: contasFinanceirosDebito.hashCode());
		result = prime
				* result
				+ ((gruConCobrarAcrescimo == null) ? 0 : gruConCobrarAcrescimo
						.hashCode());
		result = prime
				* result
				+ ((gruConGerarAcumuloIr == null) ? 0 : gruConGerarAcumuloIr
						.hashCode());
		result = prime
				* result
				+ ((gruConGerarDimob == null) ? 0 : gruConGerarDimob.hashCode());
		result = prime
				* result
				+ ((gruConHistoricoPadrao == null) ? 0 : gruConHistoricoPadrao
						.hashCode());
		result = prime * result + gruConId;
		result = prime * result
				+ ((gruConNome == null) ? 0 : gruConNome.hashCode());
		result = prime
				* result
				+ ((grupoContasJuros == null) ? 0 : grupoContasJuros.hashCode());
		result = prime
				* result
				+ ((grupoContasMultas == null) ? 0 : grupoContasMultas
						.hashCode());
		result = prime
				* result
				+ ((grupoContasValorOriginal == null) ? 0
						: grupoContasValorOriginal.hashCode());
		result = prime
				* result
				+ ((tipoDeParametros == null) ? 0 : tipoDeParametros.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		GrupoDeContas other = (GrupoDeContas) obj;
		if (centroDeCusto == null) {
			if (other.centroDeCusto != null)
				return false;
		} else if (!centroDeCusto.equals(other.centroDeCusto))
			return false;
		if (contaCorrentes == null) {
			if (other.contaCorrentes != null)
				return false;
		} else if (!contaCorrentes.equals(other.contaCorrentes))
			return false;
		if (contasFinanceirosCredito == null) {
			if (other.contasFinanceirosCredito != null)
				return false;
		} else if (!contasFinanceirosCredito
				.equals(other.contasFinanceirosCredito))
			return false;
		if (contasFinanceirosDebito == null) {
			if (other.contasFinanceirosDebito != null)
				return false;
		} else if (!contasFinanceirosDebito
				.equals(other.contasFinanceirosDebito))
			return false;
		if (gruConCobrarAcrescimo == null) {
			if (other.gruConCobrarAcrescimo != null)
				return false;
		} else if (!gruConCobrarAcrescimo.equals(other.gruConCobrarAcrescimo))
			return false;
		if (gruConGerarAcumuloIr == null) {
			if (other.gruConGerarAcumuloIr != null)
				return false;
		} else if (!gruConGerarAcumuloIr.equals(other.gruConGerarAcumuloIr))
			return false;
		if (gruConGerarDimob == null) {
			if (other.gruConGerarDimob != null)
				return false;
		} else if (!gruConGerarDimob.equals(other.gruConGerarDimob))
			return false;
		if (gruConHistoricoPadrao == null) {
			if (other.gruConHistoricoPadrao != null)
				return false;
		} else if (!gruConHistoricoPadrao.equals(other.gruConHistoricoPadrao))
			return false;
		if (gruConId != other.gruConId)
			return false;
		if (gruConNome == null) {
			if (other.gruConNome != null)
				return false;
		} else if (!gruConNome.equals(other.gruConNome))
			return false;
		if (grupoContasJuros == null) {
			if (other.grupoContasJuros != null)
				return false;
		} else if (!grupoContasJuros.equals(other.grupoContasJuros))
			return false;
		if (grupoContasMultas == null) {
			if (other.grupoContasMultas != null)
				return false;
		} else if (!grupoContasMultas.equals(other.grupoContasMultas))
			return false;
		if (grupoContasValorOriginal == null) {
			if (other.grupoContasValorOriginal != null)
				return false;
		} else if (!grupoContasValorOriginal
				.equals(other.grupoContasValorOriginal))
			return false;
		if (tipoDeParametros == null) {
			if (other.tipoDeParametros != null)
				return false;
		} else if (!tipoDeParametros.equals(other.tipoDeParametros))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "GrupoDeContas [gruConId=" + gruConId + "]";
	}

}
