package br.com.locadora.modelo;

// Generated 17/07/2014 09:18:53 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * DadosBancariosProprietario generated by hbm2java
 */
@Audited
@Entity
@Table(name = "DADOS_BANCARIOS_PROPRIETARIO", catalog = "renovarsistemas")
@AuditTable(value="DADOS_BANCARIOS_PROPRIETARIO", schema="log", catalog="renovarsistemas")
public class DadosBancariosProprietario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -347895281798205729L;
	private int dadBanProId;
	private FormaPagamento formaPagamento;
	private Banco banco;
	private String dadBanProConta;
	private String dadBanProAgencia;
	private String dadBanProOp;
	private String dadBanProTipoConta;
	private Boolean dadBanProEmCarteria;
	private Boolean dadBanProDepositoBancario;
	private String dadBanProLocalPrincipal;
	private Boolean dadBanProImprimirCheque;
	private String dadBanProPessoaDepositoNome;
	private String dadBanProPessoaDepositoBanco;
	private String dadBanProPessoaDepositoAgencia;
	private String dadBanProPessoaDepositoNumeroConta;
	private Boolean dadBanProPoupanca;
	private Boolean dadBanProContaCorrente;
	private Set<Pessoa> pessoas = new HashSet<Pessoa>(0);

	public DadosBancariosProprietario() {
	}

	public DadosBancariosProprietario(int dadBanProId, Banco banco) {
		this.dadBanProId = dadBanProId;
		this.banco = banco;
	}

	public DadosBancariosProprietario(int dadBanProId,
			FormaPagamento formaPagamento, Banco banco, String dadBanProConta,
			String dadBanProAgencia, String dadBanProOp,
			String dadBanProTipoConta, Boolean dadBanProEmCarteria,
			Boolean dadBanProDepositoBancario, String dadBanProLocalPrincipal,
			Boolean dadBanProImprimirCheque,
			String dadBanProPessoaDepositoNome,
			String dadBanProPessoaDepositoBanco,
			String dadBanProPessoaDepositoAgencia,
			String dadBanProPessoaDepositoNumeroConta,
			Boolean dadBanProPoupanca, Boolean dadBanProContaCorrente,
			Set<Pessoa> pessoas) {
		this.dadBanProId = dadBanProId;
		this.formaPagamento = formaPagamento;
		this.banco = banco;
		this.dadBanProConta = dadBanProConta;
		this.dadBanProAgencia = dadBanProAgencia;
		this.dadBanProOp = dadBanProOp;
		this.dadBanProTipoConta = dadBanProTipoConta;
		this.dadBanProEmCarteria = dadBanProEmCarteria;
		this.dadBanProDepositoBancario = dadBanProDepositoBancario;
		this.dadBanProLocalPrincipal = dadBanProLocalPrincipal;
		this.dadBanProImprimirCheque = dadBanProImprimirCheque;
		this.dadBanProPessoaDepositoNome = dadBanProPessoaDepositoNome;
		this.dadBanProPessoaDepositoBanco = dadBanProPessoaDepositoBanco;
		this.dadBanProPessoaDepositoAgencia = dadBanProPessoaDepositoAgencia;
		this.dadBanProPessoaDepositoNumeroConta = dadBanProPessoaDepositoNumeroConta;
		this.dadBanProPoupanca = dadBanProPoupanca;
		this.dadBanProContaCorrente = dadBanProContaCorrente;
		this.pessoas = pessoas;
	}

	@Id
	@GeneratedValue
	@Column(name = "DAD_BAN_PRO_ID", unique = true, nullable = false)
	public int getDadBanProId() {
		return this.dadBanProId;
	}

	public void setDadBanProId(int dadBanProId) {
		this.dadBanProId = dadBanProId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FOR_PAG_ID")
	public FormaPagamento getFormaPagamento() {
		return this.formaPagamento;
	}

	public void setFormaPagamento(FormaPagamento formaPagamento) {
		this.formaPagamento = formaPagamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BAN_ID", nullable = false)
	public Banco getBanco() {
		return this.banco;
	}

	public void setBanco(Banco banco) {
		this.banco = banco;
	}

	@Column(name = "DAD_BAN_PRO_CONTA", length = 20)
	public String getDadBanProConta() {
		return this.dadBanProConta;
	}

	public void setDadBanProConta(String dadBanProConta) {
		this.dadBanProConta = dadBanProConta;
	}

	@Column(name = "DAD_BAN_PRO_AGENCIA", length = 30)
	public String getDadBanProAgencia() {
		return this.dadBanProAgencia;
	}

	public void setDadBanProAgencia(String dadBanProAgencia) {
		this.dadBanProAgencia = dadBanProAgencia;
	}

	@Column(name = "DAD_BAN_PRO_OP", length = 3)
	public String getDadBanProOp() {
		return this.dadBanProOp;
	}

	public void setDadBanProOp(String dadBanProOp) {
		this.dadBanProOp = dadBanProOp;
	}

	@Column(name = "DAD_BAN_PRO_TIPO_CONTA", length = 30)
	public String getDadBanProTipoConta() {
		return this.dadBanProTipoConta;
	}

	public void setDadBanProTipoConta(String dadBanProTipoConta) {
		this.dadBanProTipoConta = dadBanProTipoConta;
	}

	@Column(name = "DAD_BAN_PRO_EM_CARTERIA")
	public Boolean getDadBanProEmCarteria() {
		return this.dadBanProEmCarteria;
	}

	public void setDadBanProEmCarteria(Boolean dadBanProEmCarteria) {
		this.dadBanProEmCarteria = dadBanProEmCarteria;
	}

	@Column(name = "DAD_BAN_PRO_DEPOSITO_BANCARIO")
	public Boolean getDadBanProDepositoBancario() {
		return this.dadBanProDepositoBancario;
	}

	public void setDadBanProDepositoBancario(Boolean dadBanProDepositoBancario) {
		this.dadBanProDepositoBancario = dadBanProDepositoBancario;
	}

	@Column(name = "DAD_BAN_PRO_LOCAL_PRINCIPAL", length = 50)
	public String getDadBanProLocalPrincipal() {
		return this.dadBanProLocalPrincipal;
	}

	public void setDadBanProLocalPrincipal(String dadBanProLocalPrincipal) {
		this.dadBanProLocalPrincipal = dadBanProLocalPrincipal;
	}

	@Column(name = "DAD_BAN_PRO_IMPRIMIR_CHEQUE")
	public Boolean getDadBanProImprimirCheque() {
		return this.dadBanProImprimirCheque;
	}

	public void setDadBanProImprimirCheque(Boolean dadBanProImprimirCheque) {
		this.dadBanProImprimirCheque = dadBanProImprimirCheque;
	}

	@Column(name = "DAD_BAN_PRO_PESSOA_DEPOSITO_NOME", length = 60)
	public String getDadBanProPessoaDepositoNome() {
		return this.dadBanProPessoaDepositoNome;
	}

	public void setDadBanProPessoaDepositoNome(
			String dadBanProPessoaDepositoNome) {
		this.dadBanProPessoaDepositoNome = dadBanProPessoaDepositoNome;
	}

	@Column(name = "DAD_BAN_PRO_PESSOA_DEPOSITO_BANCO", length = 30)
	public String getDadBanProPessoaDepositoBanco() {
		return this.dadBanProPessoaDepositoBanco;
	}

	public void setDadBanProPessoaDepositoBanco(
			String dadBanProPessoaDepositoBanco) {
		this.dadBanProPessoaDepositoBanco = dadBanProPessoaDepositoBanco;
	}

	@Column(name = "DAD_BAN_PRO_PESSOA_DEPOSITO_AGENCIA", length = 30)
	public String getDadBanProPessoaDepositoAgencia() {
		return this.dadBanProPessoaDepositoAgencia;
	}

	public void setDadBanProPessoaDepositoAgencia(
			String dadBanProPessoaDepositoAgencia) {
		this.dadBanProPessoaDepositoAgencia = dadBanProPessoaDepositoAgencia;
	}

	@Column(name = "DAD_BAN_PRO_PESSOA_DEPOSITO_NUMERO_CONTA", length = 30)
	public String getDadBanProPessoaDepositoNumeroConta() {
		return this.dadBanProPessoaDepositoNumeroConta;
	}

	public void setDadBanProPessoaDepositoNumeroConta(
			String dadBanProPessoaDepositoNumeroConta) {
		this.dadBanProPessoaDepositoNumeroConta = dadBanProPessoaDepositoNumeroConta;
	}

	@Column(name = "DAD_BAN_PRO_POUPANCA")
	public Boolean getDadBanProPoupanca() {
		return this.dadBanProPoupanca;
	}

	public void setDadBanProPoupanca(Boolean dadBanProPoupanca) {
		this.dadBanProPoupanca = dadBanProPoupanca;
	}

	@Column(name = "DAD_BAN_PRO_CONTA_CORRENTE")
	public Boolean getDadBanProContaCorrente() {
		return this.dadBanProContaCorrente;
	}

	public void setDadBanProContaCorrente(Boolean dadBanProContaCorrente) {
		this.dadBanProContaCorrente = dadBanProContaCorrente;
	}

	@Override
	public String toString() {
		return "DadosBancariosProprietario [dadBanProId=" + dadBanProId + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((banco == null) ? 0 : banco.hashCode());
		result = prime
				* result
				+ ((dadBanProAgencia == null) ? 0 : dadBanProAgencia.hashCode());
		result = prime * result
				+ ((dadBanProConta == null) ? 0 : dadBanProConta.hashCode());
		result = prime
				* result
				+ ((dadBanProContaCorrente == null) ? 0
						: dadBanProContaCorrente.hashCode());
		result = prime
				* result
				+ ((dadBanProDepositoBancario == null) ? 0
						: dadBanProDepositoBancario.hashCode());
		result = prime
				* result
				+ ((dadBanProEmCarteria == null) ? 0 : dadBanProEmCarteria
						.hashCode());
		result = prime * result + dadBanProId;
		result = prime
				* result
				+ ((dadBanProImprimirCheque == null) ? 0
						: dadBanProImprimirCheque.hashCode());
		result = prime
				* result
				+ ((dadBanProLocalPrincipal == null) ? 0
						: dadBanProLocalPrincipal.hashCode());
		result = prime * result
				+ ((dadBanProOp == null) ? 0 : dadBanProOp.hashCode());
		result = prime
				* result
				+ ((dadBanProPessoaDepositoAgencia == null) ? 0
						: dadBanProPessoaDepositoAgencia.hashCode());
		result = prime
				* result
				+ ((dadBanProPessoaDepositoBanco == null) ? 0
						: dadBanProPessoaDepositoBanco.hashCode());
		result = prime
				* result
				+ ((dadBanProPessoaDepositoNome == null) ? 0
						: dadBanProPessoaDepositoNome.hashCode());
		result = prime
				* result
				+ ((dadBanProPessoaDepositoNumeroConta == null) ? 0
						: dadBanProPessoaDepositoNumeroConta.hashCode());
		result = prime
				* result
				+ ((dadBanProPoupanca == null) ? 0 : dadBanProPoupanca
						.hashCode());
		result = prime
				* result
				+ ((dadBanProTipoConta == null) ? 0 : dadBanProTipoConta
						.hashCode());
		result = prime * result
				+ ((formaPagamento == null) ? 0 : formaPagamento.hashCode());
		result = prime * result + ((pessoas == null) ? 0 : pessoas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DadosBancariosProprietario other = (DadosBancariosProprietario) obj;
		if (banco == null) {
			if (other.banco != null)
				return false;
		} else if (!banco.equals(other.banco))
			return false;
		if (dadBanProAgencia == null) {
			if (other.dadBanProAgencia != null)
				return false;
		} else if (!dadBanProAgencia.equals(other.dadBanProAgencia))
			return false;
		if (dadBanProConta == null) {
			if (other.dadBanProConta != null)
				return false;
		} else if (!dadBanProConta.equals(other.dadBanProConta))
			return false;
		if (dadBanProContaCorrente == null) {
			if (other.dadBanProContaCorrente != null)
				return false;
		} else if (!dadBanProContaCorrente.equals(other.dadBanProContaCorrente))
			return false;
		if (dadBanProDepositoBancario == null) {
			if (other.dadBanProDepositoBancario != null)
				return false;
		} else if (!dadBanProDepositoBancario
				.equals(other.dadBanProDepositoBancario))
			return false;
		if (dadBanProEmCarteria == null) {
			if (other.dadBanProEmCarteria != null)
				return false;
		} else if (!dadBanProEmCarteria.equals(other.dadBanProEmCarteria))
			return false;
		if (dadBanProId != other.dadBanProId)
			return false;
		if (dadBanProImprimirCheque == null) {
			if (other.dadBanProImprimirCheque != null)
				return false;
		} else if (!dadBanProImprimirCheque
				.equals(other.dadBanProImprimirCheque))
			return false;
		if (dadBanProLocalPrincipal == null) {
			if (other.dadBanProLocalPrincipal != null)
				return false;
		} else if (!dadBanProLocalPrincipal
				.equals(other.dadBanProLocalPrincipal))
			return false;
		if (dadBanProOp == null) {
			if (other.dadBanProOp != null)
				return false;
		} else if (!dadBanProOp.equals(other.dadBanProOp))
			return false;
		if (dadBanProPessoaDepositoAgencia == null) {
			if (other.dadBanProPessoaDepositoAgencia != null)
				return false;
		} else if (!dadBanProPessoaDepositoAgencia
				.equals(other.dadBanProPessoaDepositoAgencia))
			return false;
		if (dadBanProPessoaDepositoBanco == null) {
			if (other.dadBanProPessoaDepositoBanco != null)
				return false;
		} else if (!dadBanProPessoaDepositoBanco
				.equals(other.dadBanProPessoaDepositoBanco))
			return false;
		if (dadBanProPessoaDepositoNome == null) {
			if (other.dadBanProPessoaDepositoNome != null)
				return false;
		} else if (!dadBanProPessoaDepositoNome
				.equals(other.dadBanProPessoaDepositoNome))
			return false;
		if (dadBanProPessoaDepositoNumeroConta == null) {
			if (other.dadBanProPessoaDepositoNumeroConta != null)
				return false;
		} else if (!dadBanProPessoaDepositoNumeroConta
				.equals(other.dadBanProPessoaDepositoNumeroConta))
			return false;
		if (dadBanProPoupanca == null) {
			if (other.dadBanProPoupanca != null)
				return false;
		} else if (!dadBanProPoupanca.equals(other.dadBanProPoupanca))
			return false;
		if (dadBanProTipoConta == null) {
			if (other.dadBanProTipoConta != null)
				return false;
		} else if (!dadBanProTipoConta.equals(other.dadBanProTipoConta))
			return false;
		if (formaPagamento == null) {
			if (other.formaPagamento != null)
				return false;
		} else if (!formaPagamento.equals(other.formaPagamento))
			return false;
		if (pessoas == null) {
			if (other.pessoas != null)
				return false;
		} else if (!pessoas.equals(other.pessoas))
			return false;
		return true;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dadosBancariosProprietario")
	@NotAudited
	public Set<Pessoa> getPessoas() {
		return this.pessoas;
	}

	public void setPessoas(Set<Pessoa> pessoas) {
		this.pessoas = pessoas;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

}
