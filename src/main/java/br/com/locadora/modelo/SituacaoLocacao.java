package br.com.locadora.modelo;

// Generated 26/06/2014 17:19:33 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * SituacaoLocacao generated by hbm2java
 */
@Audited
@Entity
@Table(name = "SITUACAO_LOCACAO", catalog = "renovarsistemas")
@AuditTable(value="SITUACAO_LOCACAO", schema="log", catalog="renovarsistemas")
public class SituacaoLocacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1354637292724014148L;
	private int sitLocId;
	private Situacaoimovel situacaoimovel;
	private String sitLocNome;
	private Set<Locacao> locacaos = new HashSet<Locacao>(0);
	private Set<SituacaoLocacaoPermissoes> situacaoLocacaoPermissoeses = new HashSet<SituacaoLocacaoPermissoes>(
			0);

	public SituacaoLocacao() {
	}

	public SituacaoLocacao(int sitLocId) {
		this.sitLocId = sitLocId;
	}

	public SituacaoLocacao(int sitLocId, Situacaoimovel situacaoimovel,
			String sitLocNome, Set<Locacao> locacaos,
			Set<SituacaoLocacaoPermissoes> situacaoLocacaoPermissoeses) {
		this.sitLocId = sitLocId;
		this.situacaoimovel = situacaoimovel;
		this.sitLocNome = sitLocNome;
		this.locacaos = locacaos;
		this.situacaoLocacaoPermissoeses = situacaoLocacaoPermissoeses;
	}

	@Id
	@GeneratedValue
	@Column(name = "SIT_LOC_ID", unique = true, nullable = false)
	public int getSitLocId() {
		return this.sitLocId;
	}

	public void setSitLocId(int sitLocId) {
		this.sitLocId = sitLocId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SIT_ID")
	public Situacaoimovel getSituacaoimovel() {
		return this.situacaoimovel;
	}

	public void setSituacaoimovel(Situacaoimovel situacaoimovel) {
		this.situacaoimovel = situacaoimovel;
	}

	@Column(name = "SIT_LOC_NOME", length = 70)
	public String getSitLocNome() {
		return this.sitLocNome;
	}

	public void setSitLocNome(String sitLocNome) {
		this.sitLocNome = sitLocNome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "situacaoLocacao")
	@NotAudited
	public Set<Locacao> getLocacaos() {
		return this.locacaos;
	}

	public void setLocacaos(Set<Locacao> locacaos) {
		this.locacaos = locacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "situacaoLocacao")
	@NotAudited
	public Set<SituacaoLocacaoPermissoes> getSituacaoLocacaoPermissoeses() {
		return this.situacaoLocacaoPermissoeses;
	}

	public void setSituacaoLocacaoPermissoeses(
			Set<SituacaoLocacaoPermissoes> situacaoLocacaoPermissoeses) {
		this.situacaoLocacaoPermissoeses = situacaoLocacaoPermissoeses;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((locacaos == null) ? 0 : locacaos.hashCode());
		result = prime * result + sitLocId;
		result = prime * result
				+ ((sitLocNome == null) ? 0 : sitLocNome.hashCode());
		result = prime
				* result
				+ ((situacaoLocacaoPermissoeses == null) ? 0
						: situacaoLocacaoPermissoeses.hashCode());
		result = prime * result
				+ ((situacaoimovel == null) ? 0 : situacaoimovel.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SituacaoLocacao other = (SituacaoLocacao) obj;
		if (locacaos == null) {
			if (other.locacaos != null)
				return false;
		} else if (!locacaos.equals(other.locacaos))
			return false;
		if (sitLocId != other.sitLocId)
			return false;
		if (sitLocNome == null) {
			if (other.sitLocNome != null)
				return false;
		} else if (!sitLocNome.equals(other.sitLocNome))
			return false;
		if (situacaoLocacaoPermissoeses == null) {
			if (other.situacaoLocacaoPermissoeses != null)
				return false;
		} else if (!situacaoLocacaoPermissoeses
				.equals(other.situacaoLocacaoPermissoeses))
			return false;
		if (situacaoimovel == null) {
			if (other.situacaoimovel != null)
				return false;
		} else if (!situacaoimovel.equals(other.situacaoimovel))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "SituacaoLocacao [sitLocId=" + sitLocId + "]";
	}

}
