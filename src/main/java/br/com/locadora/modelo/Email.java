package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * Email generated by hbm2java
 */
@Audited
@Entity
@Table(name = "EMAIL", catalog = "renovarsistemas")
@AuditTable(value="EMAIL", schema="log", catalog="renovarsistemas")
public class Email implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1970198240887406543L;
	private int emaId;
	private Pessoa pessoa;
	private Filial filial;
	private String emaEndereco;
	private Character emaSpam;

	public Email() {
	}

	public Email(int emaId) {
		this.emaId = emaId;
	}

	public Email(int emaId, Pessoa pessoa, Filial filial, String emaEndereco,
			Character emaSpam) {
		this.emaId = emaId;
		this.pessoa = pessoa;
		this.filial = filial;
		this.emaEndereco = emaEndereco;
		this.emaSpam = emaSpam;
	}

	@Id
	@GeneratedValue
	@Column(name = "EMA_ID", unique = true, nullable = false)
	public int getEmaId() {
		return this.emaId;
	}

	public void setEmaId(int emaId) {
		this.emaId = emaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID")
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIL_ID")
	public Filial getFilial() {
		return this.filial;
	}

	public void setFilial(Filial filial) {
		this.filial = filial;
	}

	@Column(name = "EMA_ENDERECO",unique=true, length = 80)
/*	@org.hibernate.validator.constraints.Email(message="E-Mail não padronizado, digite novamente o e-mail")
	@NotNull(message="E-Mail obrigatorio")*/
	public String getEmaEndereco() {
		return this.emaEndereco;
	}

	public void setEmaEndereco(String emaEndereco) {
		this.emaEndereco = emaEndereco;
	}

	@Column(name = "EMA_SPAM", length = 1)
	public Character getEmaSpam() {
		return this.emaSpam;
	}

	public void setEmaSpam(Character emaSpam) {
		this.emaSpam = emaSpam;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((emaEndereco == null) ? 0 : emaEndereco.hashCode());
		result = prime * result + emaId;
		result = prime * result + ((emaSpam == null) ? 0 : emaSpam.hashCode());
		result = prime * result + ((filial == null) ? 0 : filial.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Email other = (Email) obj;
		if (emaEndereco == null) {
			if (other.emaEndereco != null)
				return false;
		} else if (!emaEndereco.equals(other.emaEndereco))
			return false;
		if (emaId != other.emaId)
			return false;
		if (emaSpam == null) {
			if (other.emaSpam != null)
				return false;
		} else if (!emaSpam.equals(other.emaSpam))
			return false;
		if (filial == null) {
			if (other.filial != null)
				return false;
		} else if (!filial.equals(other.filial))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Email [emaId=" + emaId + "]";
	}

}
