package br.com.locadora.modelo;

// Generated 26/06/2014 17:19:33 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * SituacaoLocacaoPermissoes generated by hbm2java
 */
@Audited
@Entity
@Table(name = "SITUACAO_LOCACAO_PERMISSOES", catalog = "renovarsistemas")
@AuditTable(value="SITUACAO_LOCACAO_PERMISSOES", schema="log", catalog="renovarsistemas")
public class SituacaoLocacaoPermissoes implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 438509765732026556L;
	private SituacaoLocacaoPermissoesId id;
	private PermissoesLocacao permissoesLocacao;
	private SituacaoLocacao situacaoLocacao;
	private Date sitPerData;

	public SituacaoLocacaoPermissoes() {
	}

	public SituacaoLocacaoPermissoes(SituacaoLocacaoPermissoesId id,
			PermissoesLocacao permissoesLocacao, SituacaoLocacao situacaoLocacao) {
		this.id = id;
		this.permissoesLocacao = permissoesLocacao;
		this.situacaoLocacao = situacaoLocacao;
	}

	public SituacaoLocacaoPermissoes(SituacaoLocacaoPermissoesId id,
			PermissoesLocacao permissoesLocacao,
			SituacaoLocacao situacaoLocacao, Date sitPerData) {
		this.id = id;
		this.permissoesLocacao = permissoesLocacao;
		this.situacaoLocacao = situacaoLocacao;
		this.sitPerData = sitPerData;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "perLocId", column = @Column(name = "PER_LOC_ID", nullable = false)),
			@AttributeOverride(name = "sitLocId", column = @Column(name = "SIT_LOC_ID", nullable = false)) })
	public SituacaoLocacaoPermissoesId getId() {
		return this.id;
	}

	public void setId(SituacaoLocacaoPermissoesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PER_LOC_ID", nullable = false, insertable = false, updatable = false)
	public PermissoesLocacao getPermissoesLocacao() {
		return this.permissoesLocacao;
	}

	public void setPermissoesLocacao(PermissoesLocacao permissoesLocacao) {
		this.permissoesLocacao = permissoesLocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SIT_LOC_ID", nullable = false, insertable = false, updatable = false)
	public SituacaoLocacao getSituacaoLocacao() {
		return this.situacaoLocacao;
	}

	public void setSituacaoLocacao(SituacaoLocacao situacaoLocacao) {
		this.situacaoLocacao = situacaoLocacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SIT_PER_DATA", length = 23)
	public Date getSitPerData() {
		return this.sitPerData;
	}

	public void setSitPerData(Date sitPerData) {
		this.sitPerData = sitPerData;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime
				* result
				+ ((permissoesLocacao == null) ? 0 : permissoesLocacao
						.hashCode());
		result = prime * result
				+ ((sitPerData == null) ? 0 : sitPerData.hashCode());
		result = prime * result
				+ ((situacaoLocacao == null) ? 0 : situacaoLocacao.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SituacaoLocacaoPermissoes other = (SituacaoLocacaoPermissoes) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (permissoesLocacao == null) {
			if (other.permissoesLocacao != null)
				return false;
		} else if (!permissoesLocacao.equals(other.permissoesLocacao))
			return false;
		if (sitPerData == null) {
			if (other.sitPerData != null)
				return false;
		} else if (!sitPerData.equals(other.sitPerData))
			return false;
		if (situacaoLocacao == null) {
			if (other.situacaoLocacao != null)
				return false;
		} else if (!situacaoLocacao.equals(other.situacaoLocacao))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "SituacaoLocacaoPermissoes [id=" + id + "]";
	}

}
