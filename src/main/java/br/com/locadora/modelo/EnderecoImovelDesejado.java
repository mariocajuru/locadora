package br.com.locadora.modelo;

// Generated 11/04/2014 14:12:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * EnderecoImovelDesejado generated by hbm2java
 */
@Audited
@Entity
@Table(name = "ENDERECO_IMOVEL_DESEJADO", catalog = "renovarsistemas")
@AuditTable(value="ENDERECO_IMOVEL_DESEJADO", schema="log", catalog="renovarsistemas")
public class EnderecoImovelDesejado implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2115466144951053279L;
	private int endImoDesId;
	private Bairro bairro;
	private Cidade cidade;
	private String endImoDesNome;
	private Integer endImoDesNumero;
	private String endImoDesCep;
	private Character endImoDesZona;
	private Integer endImoDesLatitude;
	private Integer endImoDesLongitude;
	private Set<ImovelDesejado> imovelDesejados = new HashSet<ImovelDesejado>(0);

	public EnderecoImovelDesejado() {
	}

	public EnderecoImovelDesejado(int endImoDesId, Bairro bairro, Cidade cidade) {
		this.endImoDesId = endImoDesId;
		this.bairro = bairro;
		this.cidade = cidade;
	}

	public EnderecoImovelDesejado(int endImoDesId, Bairro bairro,
			Cidade cidade, String endImoDesNome, Integer endImoDesNumero,
			String endImoDesCep, Character endImoDesZona,
			Integer endImoDesLatitude, Integer endImoDesLongitude,
			Set<ImovelDesejado> imovelDesejados) {
		this.endImoDesId = endImoDesId;
		this.bairro = bairro;
		this.cidade = cidade;
		this.endImoDesNome = endImoDesNome;
		this.endImoDesNumero = endImoDesNumero;
		this.endImoDesCep = endImoDesCep;
		this.endImoDesZona = endImoDesZona;
		this.endImoDesLatitude = endImoDesLatitude;
		this.endImoDesLongitude = endImoDesLongitude;
		this.imovelDesejados = imovelDesejados;
	}

	@Id
	@GeneratedValue
	@Column(name = "END_IMO_DES_ID", unique = true, nullable = false)
	public int getEndImoDesId() {
		return this.endImoDesId;
	}

	public void setEndImoDesId(int endImoDesId) {
		this.endImoDesId = endImoDesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BAI_ID", nullable = false)
	public Bairro getBairro() {
		return this.bairro;
	}

	public void setBairro(Bairro bairro) {
		this.bairro = bairro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_ID", nullable = false)
	public Cidade getCidade() {
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {
		this.cidade = cidade;
	}

	@Column(name = "END_IMO_DES_NOME", length = 50)
	public String getEndImoDesNome() {
		return this.endImoDesNome;
	}

	public void setEndImoDesNome(String endImoDesNome) {
		this.endImoDesNome = endImoDesNome;
	}

	@Column(name = "END_IMO_DES_NUMERO")
	public Integer getEndImoDesNumero() {
		return this.endImoDesNumero;
	}

	public void setEndImoDesNumero(Integer endImoDesNumero) {
		this.endImoDesNumero = endImoDesNumero;
	}

	@Column(name = "END_IMO_DES_CEP", length = 9)
	public String getEndImoDesCep() {
		return this.endImoDesCep;
	}

	public void setEndImoDesCep(String endImoDesCep) {
		this.endImoDesCep = endImoDesCep;
	}

	@Column(name = "END_IMO_DES_ZONA", length = 1)
	public Character getEndImoDesZona() {
		return this.endImoDesZona;
	}

	public void setEndImoDesZona(Character endImoDesZona) {
		this.endImoDesZona = endImoDesZona;
	}

	@Column(name = "END_IMO_DES_LATITUDE")
	public Integer getEndImoDesLatitude() {
		return this.endImoDesLatitude;
	}

	public void setEndImoDesLatitude(Integer endImoDesLatitude) {
		this.endImoDesLatitude = endImoDesLatitude;
	}

	@Column(name = "END_IMO_DES_LONGITUDE")
	public Integer getEndImoDesLongitude() {
		return this.endImoDesLongitude;
	}

	public void setEndImoDesLongitude(Integer endImoDesLongitude) {
		this.endImoDesLongitude = endImoDesLongitude;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "enderecoImovelDesejado")
	@NotAudited
	public Set<ImovelDesejado> getImovelDesejados() {
		return this.imovelDesejados;
	}

	public void setImovelDesejados(Set<ImovelDesejado> imovelDesejados) {
		this.imovelDesejados = imovelDesejados;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bairro == null) ? 0 : bairro.hashCode());
		result = prime * result + ((cidade == null) ? 0 : cidade.hashCode());
		result = prime * result
				+ ((endImoDesCep == null) ? 0 : endImoDesCep.hashCode());
		result = prime * result + endImoDesId;
		result = prime
				* result
				+ ((endImoDesLatitude == null) ? 0 : endImoDesLatitude
						.hashCode());
		result = prime
				* result
				+ ((endImoDesLongitude == null) ? 0 : endImoDesLongitude
						.hashCode());
		result = prime * result
				+ ((endImoDesNome == null) ? 0 : endImoDesNome.hashCode());
		result = prime * result
				+ ((endImoDesNumero == null) ? 0 : endImoDesNumero.hashCode());
		result = prime * result
				+ ((endImoDesZona == null) ? 0 : endImoDesZona.hashCode());
		result = prime * result
				+ ((imovelDesejados == null) ? 0 : imovelDesejados.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		EnderecoImovelDesejado other = (EnderecoImovelDesejado) obj;
		if (bairro == null) {
			if (other.bairro != null)
				return false;
		} else if (!bairro.equals(other.bairro))
			return false;
		if (cidade == null) {
			if (other.cidade != null)
				return false;
		} else if (!cidade.equals(other.cidade))
			return false;
		if (endImoDesCep == null) {
			if (other.endImoDesCep != null)
				return false;
		} else if (!endImoDesCep.equals(other.endImoDesCep))
			return false;
		if (endImoDesId != other.endImoDesId)
			return false;
		if (endImoDesLatitude == null) {
			if (other.endImoDesLatitude != null)
				return false;
		} else if (!endImoDesLatitude.equals(other.endImoDesLatitude))
			return false;
		if (endImoDesLongitude == null) {
			if (other.endImoDesLongitude != null)
				return false;
		} else if (!endImoDesLongitude.equals(other.endImoDesLongitude))
			return false;
		if (endImoDesNome == null) {
			if (other.endImoDesNome != null)
				return false;
		} else if (!endImoDesNome.equals(other.endImoDesNome))
			return false;
		if (endImoDesNumero == null) {
			if (other.endImoDesNumero != null)
				return false;
		} else if (!endImoDesNumero.equals(other.endImoDesNumero))
			return false;
		if (endImoDesZona == null) {
			if (other.endImoDesZona != null)
				return false;
		} else if (!endImoDesZona.equals(other.endImoDesZona))
			return false;
		if (imovelDesejados == null) {
			if (other.imovelDesejados != null)
				return false;
		} else if (!imovelDesejados.equals(other.imovelDesejados))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "EnderecoImovelDesejado [endImoDesId=" + endImoDesId + "]";
	}

}
