package br.com.locadora.modelo;

// Generated 05/09/2014 09:39:29 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Locacao generated by hbm2java
 */
@Audited
@Entity
@Table(name = "LOCACAO", catalog = "renovarsistemas")
@AuditTable(value="LOCACAO", schema="log", catalog="renovarsistemas")
public class Locacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4160920265120151755L;
	private int locId;
	private DestinacaoLocacao destinacaoLocacao;
	private Filial filial;
	private Imovel imovel;
	private IndicesReajustes indicesReajustes;
	private Pessoa pessoa;
	private SeguroFianca seguroFianca;
	private SeguroIncendio seguroIncendio;
	private SituacaoLocacao situacaoLocacao;
	private StatusLocacao statusLocacao;
	private Vistoria vistoria;
	private Integer locFuncionario;
	private Integer locMesesDeContrato;
	private Date locDataInicialContrato;
	private Integer locDiaPagamentoLocatario;
	private Integer locDiaPagamentoLocador;
	private Integer locFuncionarioIndicacao;
	private String locCategoria;
	private Double locTaxaAdministrativa;
	private Date locDataTerminioContrato;
	private Integer locPrazoGarantia;
	private Date locLancamentoMesAno;
	private Date locDataSituacao;
	private Date locDataCadastro;
	private String locResponsavel;
	private String locInformacoes;
	private String locClausulaEspecial;
	private Double locValorAluguel;
	private String locModoPamento;
	private String locAcertoContas;
	private Boolean locGerarBoleto;
	private Boolean locCalcularIrFonte;
	private Boolean locCalcularIrrf;
	private Integer locCorretor;
	private String locCorretorNome;
	private Double locMultaAtraso;
	private Double locJurosAtraso;
	private Double locMultaRecisao;
	private Double locAluguel;
	private Integer locCarencia;
	private String locTipo;
	private Boolean locSeguroIncendioParticular;
	private Set<ProprietariosLocacao> proprietariosLocacaos = new HashSet<ProprietariosLocacao>(
			0);
	private Set<Iptu> iptus = new HashSet<Iptu>(0);
	private Set<InformacaoAdicional> informacaoAdicionals = new HashSet<InformacaoAdicional>(
			0);
	private Set<SeguroIncendio> seguroIncendios = new HashSet<SeguroIncendio>(0);
	private Set<SeguroFianca> seguroFiancas = new HashSet<SeguroFianca>(0);
	private List<Fiador> fiadors = new ArrayList<Fiador>(0);
	private Set<DescontoLocacao> descontoLocacaos = new HashSet<DescontoLocacao>(
			0);

	public Locacao() {
	}

	public Locacao(int locId, Filial filial, Imovel imovel, Pessoa pessoa) {
		this.locId = locId;
		this.filial = filial;
		this.imovel = imovel;
		this.pessoa = pessoa;
	}

	public Locacao(int locId, DestinacaoLocacao destinacaoLocacao,
			Filial filial, Imovel imovel, IndicesReajustes indicesReajustes,
			Pessoa pessoa, SeguroFianca seguroFianca,
			SeguroIncendio seguroIncendio, SituacaoLocacao situacaoLocacao,
			StatusLocacao statusLocacao, Vistoria vistoria,
			Integer locFuncionario, Integer locMesesDeContrato,
			Date locDataInicialContrato, Integer locDiaPagamentoLocatario,
			Integer locDiaPagamentoLocador, Integer locFuncionarioIndicacao,
			String locCategoria, Double locTaxaAdministrativa,
			Date locDataTerminioContrato, Integer locPrazoGarantia,
			Date locLancamentoMesAno, Date locDataSituacao,
			Date locDataCadastro, String locResponsavel, String locInformacoes,
			String locClausulaEspecial, Double locValorAluguel,
			String locModoPamento, String locAcertoContas,
			Boolean locGerarBoleto, Boolean locCalcularIrFonte,
			Boolean locCalcularIrrf, Integer locCorretor,
			String locCorretorNome, Double locMultaAtraso,
			Double locJurosAtraso, Double locMultaRecisao, Double locAluguel,
			Integer locCarencia, String locTipo,
			Boolean locSeguroIncendioParticular,
			Set<ProprietariosLocacao> proprietariosLocacaos, Set<Iptu> iptus,
			Set<InformacaoAdicional> informacaoAdicionals,
			Set<SeguroIncendio> seguroIncendios,Set<DescontoLocacao> descontoLocacaos,
			Set<SeguroFianca> seguroFiancas, List<Fiador> fiadors) {
		this.locId = locId;
		this.destinacaoLocacao = destinacaoLocacao;
		this.filial = filial;
		this.imovel = imovel;
		this.indicesReajustes = indicesReajustes;
		this.pessoa = pessoa;
		this.seguroFianca = seguroFianca;
		this.seguroIncendio = seguroIncendio;
		this.situacaoLocacao = situacaoLocacao;
		this.statusLocacao = statusLocacao;
		this.vistoria = vistoria;
		this.locFuncionario = locFuncionario;
		this.locMesesDeContrato = locMesesDeContrato;
		this.locDataInicialContrato = locDataInicialContrato;
		this.locDiaPagamentoLocatario = locDiaPagamentoLocatario;
		this.locDiaPagamentoLocador = locDiaPagamentoLocador;
		this.locFuncionarioIndicacao = locFuncionarioIndicacao;
		this.locCategoria = locCategoria;
		this.locTaxaAdministrativa = locTaxaAdministrativa;
		this.locDataTerminioContrato = locDataTerminioContrato;
		this.locPrazoGarantia = locPrazoGarantia;
		this.locLancamentoMesAno = locLancamentoMesAno;
		this.locDataSituacao = locDataSituacao;
		this.locDataCadastro = locDataCadastro;
		this.locResponsavel = locResponsavel;
		this.locInformacoes = locInformacoes;
		this.locClausulaEspecial = locClausulaEspecial;
		this.locValorAluguel = locValorAluguel;
		this.locModoPamento = locModoPamento;
		this.locAcertoContas = locAcertoContas;
		this.locGerarBoleto = locGerarBoleto;
		this.locCalcularIrFonte = locCalcularIrFonte;
		this.locCalcularIrrf = locCalcularIrrf;
		this.locCorretor = locCorretor;
		this.locCorretorNome = locCorretorNome;
		this.locMultaAtraso = locMultaAtraso;
		this.locJurosAtraso = locJurosAtraso;
		this.locMultaRecisao = locMultaRecisao;
		this.locAluguel = locAluguel;
		this.locCarencia = locCarencia;
		this.locTipo = locTipo;
		this.locSeguroIncendioParticular = locSeguroIncendioParticular;
		this.proprietariosLocacaos = proprietariosLocacaos;
		this.iptus = iptus;
		this.informacaoAdicionals = informacaoAdicionals;
		this.seguroIncendios = seguroIncendios;
		this.seguroFiancas = seguroFiancas;
		this.descontoLocacaos = descontoLocacaos;
		this.fiadors = fiadors;
	}

	@Id
	@GeneratedValue
	@Column(name = "LOC_ID", unique = true, nullable = false)
	public int getLocId() {
		return this.locId;
	}

	public void setLocId(int locId) {
		this.locId = locId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "DES_LOC_ID")
	public DestinacaoLocacao getDestinacaoLocacao() {
		return this.destinacaoLocacao;
	}

	public void setDestinacaoLocacao(DestinacaoLocacao destinacaoLocacao) {
		this.destinacaoLocacao = destinacaoLocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIL_ID", nullable = false)
	public Filial getFilial() {
		return this.filial;
	}

	public void setFilial(Filial filial) {
		this.filial = filial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMO_ID", nullable = false)
	public Imovel getImovel() {
		return this.imovel;
	}

	public void setImovel(Imovel imovel) {
		this.imovel = imovel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IND_REA_ID")
	public IndicesReajustes getIndicesReajustes() {
		return this.indicesReajustes;
	}

	public void setIndicesReajustes(IndicesReajustes indicesReajustes) {
		this.indicesReajustes = indicesReajustes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SEG_FIA_ID")
	public SeguroFianca getSeguroFianca() {
		return this.seguroFianca;
	}

	public void setSeguroFianca(SeguroFianca seguroFianca) {
		this.seguroFianca = seguroFianca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SEG_INC_ID")
	public SeguroIncendio getSeguroIncendio() {
		return this.seguroIncendio;
	}

	public void setSeguroIncendio(SeguroIncendio seguroIncendio) {
		this.seguroIncendio = seguroIncendio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SIT_LOC_ID")
	public SituacaoLocacao getSituacaoLocacao() {
		return this.situacaoLocacao;
	}

	public void setSituacaoLocacao(SituacaoLocacao situacaoLocacao) {
		this.situacaoLocacao = situacaoLocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STA_LOC_ID")
	public StatusLocacao getStatusLocacao() {
		return this.statusLocacao;
	}

	public void setStatusLocacao(StatusLocacao statusLocacao) {
		this.statusLocacao = statusLocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VIS_ID")
	public Vistoria getVistoria() {
		return this.vistoria;
	}

	public void setVistoria(Vistoria vistoria) {
		this.vistoria = vistoria;
	}

	@Column(name = "LOC_FUNCIONARIO")
	public Integer getLocFuncionario() {
		return this.locFuncionario;
	}

	public void setLocFuncionario(Integer locFuncionario) {
		this.locFuncionario = locFuncionario;
	}

	@Column(name = "LOC_MESES_DE_CONTRATO")
	public Integer getLocMesesDeContrato() {
		return this.locMesesDeContrato;
	}

	public void setLocMesesDeContrato(Integer locMesesDeContrato) {
		this.locMesesDeContrato = locMesesDeContrato;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOC_DATA_INICIAL_CONTRATO", length = 23)
	public Date getLocDataInicialContrato() {
		return this.locDataInicialContrato;
	}

	public void setLocDataInicialContrato(Date locDataInicialContrato) {
		this.locDataInicialContrato = locDataInicialContrato;
	}

	@Column(name = "LOC_DIA_PAGAMENTO_LOCATARIO")
	public Integer getLocDiaPagamentoLocatario() {
		return this.locDiaPagamentoLocatario;
	}

	public void setLocDiaPagamentoLocatario(Integer locDiaPagamentoLocatario) {
		this.locDiaPagamentoLocatario = locDiaPagamentoLocatario;
	}

	@Column(name = "LOC_DIA_PAGAMENTO_LOCADOR")
	public Integer getLocDiaPagamentoLocador() {
		return this.locDiaPagamentoLocador;
	}

	public void setLocDiaPagamentoLocador(Integer locDiaPagamentoLocador) {
		this.locDiaPagamentoLocador = locDiaPagamentoLocador;
	}

	@Column(name = "LOC_FUNCIONARIO_INDICACAO")
	public Integer getLocFuncionarioIndicacao() {
		return this.locFuncionarioIndicacao;
	}

	public void setLocFuncionarioIndicacao(Integer locFuncionarioIndicacao) {
		this.locFuncionarioIndicacao = locFuncionarioIndicacao;
	}

	@Column(name = "LOC_CATEGORIA", length = 80)
	public String getLocCategoria() {
		return this.locCategoria;
	}

	public void setLocCategoria(String locCategoria) {
		this.locCategoria = locCategoria;
	}

	@Column(name = "LOC_TAXA_ADMINISTRATIVA", precision = 53, scale = 0)
	public Double getLocTaxaAdministrativa() {
		return this.locTaxaAdministrativa;
	}

	public void setLocTaxaAdministrativa(Double locTaxaAdministrativa) {
		this.locTaxaAdministrativa = locTaxaAdministrativa;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<DescontoLocacao> getDescontoLocacaos() {
		return this.descontoLocacaos;
	}

	public void setDescontoLocacaos(Set<DescontoLocacao> descontoLocacaos) {
		this.descontoLocacaos = descontoLocacaos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOC_DATA_TERMINIO_CONTRATO", length = 23)
	public Date getLocDataTerminioContrato() {
		return this.locDataTerminioContrato;
	}

	public void setLocDataTerminioContrato(Date locDataTerminioContrato) {
		this.locDataTerminioContrato = locDataTerminioContrato;
	}

	@Column(name = "LOC_PRAZO_GARANTIA")
	public Integer getLocPrazoGarantia() {
		return this.locPrazoGarantia;
	}

	public void setLocPrazoGarantia(Integer locPrazoGarantia) {
		this.locPrazoGarantia = locPrazoGarantia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOC_LANCAMENTO_MES_ANO", length = 23)
	public Date getLocLancamentoMesAno() {
		return this.locLancamentoMesAno;
	}

	public void setLocLancamentoMesAno(Date locLancamentoMesAno) {
		this.locLancamentoMesAno = locLancamentoMesAno;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOC_DATA_SITUACAO", length = 23)
	public Date getLocDataSituacao() {
		return this.locDataSituacao;
	}

	public void setLocDataSituacao(Date locDataSituacao) {
		this.locDataSituacao = locDataSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOC_DATA_CADASTRO", length = 23)
	public Date getLocDataCadastro() {
		return this.locDataCadastro;
	}

	public void setLocDataCadastro(Date locDataCadastro) {
		this.locDataCadastro = locDataCadastro;
	}

	@Column(name = "LOC_RESPONSAVEL", length = 60)
	public String getLocResponsavel() {
		return this.locResponsavel;
	}

	public void setLocResponsavel(String locResponsavel) {
		this.locResponsavel = locResponsavel;
	}

	@Column(name = "LOC_INFORMACOES", length = 151)
	public String getLocInformacoes() {
		return this.locInformacoes;
	}

	public void setLocInformacoes(String locInformacoes) {
		this.locInformacoes = locInformacoes;
	}

	@Column(name = "LOC_CLAUSULA_ESPECIAL", length = 151)
	public String getLocClausulaEspecial() {
		return this.locClausulaEspecial;
	}

	public void setLocClausulaEspecial(String locClausulaEspecial) {
		this.locClausulaEspecial = locClausulaEspecial;
	}

	@Column(name = "LOC_VALOR_ALUGUEL", precision = 53, scale = 0)
	public Double getLocValorAluguel() {
		return this.locValorAluguel;
	}

	public void setLocValorAluguel(Double locValorAluguel) {
		this.locValorAluguel = locValorAluguel;
	}

	@Column(name = "LOC_MODO_PAMENTO", length = 90)
	public String getLocModoPamento() {
		return this.locModoPamento;
	}

	public void setLocModoPamento(String locModoPamento) {
		this.locModoPamento = locModoPamento;
	}

	@Column(name = "LOC_ACERTO_CONTAS", length = 151)
	public String getLocAcertoContas() {
		return this.locAcertoContas;
	}

	public void setLocAcertoContas(String locAcertoContas) {
		this.locAcertoContas = locAcertoContas;
	}

	@Column(name = "LOC_GERAR_BOLETO")
	public Boolean getLocGerarBoleto() {
		return this.locGerarBoleto;
	}

	public void setLocGerarBoleto(Boolean locGerarBoleto) {
		this.locGerarBoleto = locGerarBoleto;
	}

	@Column(name = "LOC_CALCULAR_IR_FONTE")
	public Boolean getLocCalcularIrFonte() {
		return this.locCalcularIrFonte;
	}

	public void setLocCalcularIrFonte(Boolean locCalcularIrFonte) {
		this.locCalcularIrFonte = locCalcularIrFonte;
	}

	@Column(name = "LOC_CALCULAR_IRRF")
	public Boolean getLocCalcularIrrf() {
		return this.locCalcularIrrf;
	}

	public void setLocCalcularIrrf(Boolean locCalcularIrrf) {
		this.locCalcularIrrf = locCalcularIrrf;
	}

	@Column(name = "LOC_CORRETOR")
	public Integer getLocCorretor() {
		return this.locCorretor;
	}

	public void setLocCorretor(Integer locCorretor) {
		this.locCorretor = locCorretor;
	}

	@Column(name = "LOC_CORRETOR_NOME", length = 40)
	public String getLocCorretorNome() {
		return this.locCorretorNome;
	}

	public void setLocCorretorNome(String locCorretorNome) {
		this.locCorretorNome = locCorretorNome;
	}

	@Column(name = "LOC_MULTA_ATRASO", precision = 53, scale = 0)
	public Double getLocMultaAtraso() {
		return this.locMultaAtraso;
	}

	public void setLocMultaAtraso(Double locMultaAtraso) {
		this.locMultaAtraso = locMultaAtraso;
	}

	@Column(name = "LOC_JUROS_ATRASO", precision = 53, scale = 0)
	public Double getLocJurosAtraso() {
		return this.locJurosAtraso;
	}

	public void setLocJurosAtraso(Double locJurosAtraso) {
		this.locJurosAtraso = locJurosAtraso;
	}

	@Column(name = "LOC_MULTA_RECISAO", precision = 53, scale = 0)
	public Double getLocMultaRecisao() {
		return this.locMultaRecisao;
	}

	public void setLocMultaRecisao(Double locMultaRecisao) {
		this.locMultaRecisao = locMultaRecisao;
	}

	@Column(name = "LOC_ALUGUEL", precision = 53, scale = 0)
	public Double getLocAluguel() {
		return this.locAluguel;
	}

	public void setLocAluguel(Double locAluguel) {
		this.locAluguel = locAluguel;
	}

	@Column(name = "LOC_CARENCIA")
	public Integer getLocCarencia() {
		return this.locCarencia;
	}

	public void setLocCarencia(Integer locCarencia) {
		this.locCarencia = locCarencia;
	}

	@Column(name = "LOC_TIPO", length = 80)
	public String getLocTipo() {
		return this.locTipo;
	}

	public void setLocTipo(String locTipo) {
		this.locTipo = locTipo;
	}

	@Column(name = "LOC_SEGURO_INCENDIO_PARTICULAR")
	public Boolean getLocSeguroIncendioParticular() {
		return this.locSeguroIncendioParticular;
	}

	public void setLocSeguroIncendioParticular(
			Boolean locSeguroIncendioParticular) {
		this.locSeguroIncendioParticular = locSeguroIncendioParticular;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<ProprietariosLocacao> getProprietariosLocacaos() {
		return this.proprietariosLocacaos;
	}

	public void setProprietariosLocacaos(
			Set<ProprietariosLocacao> proprietariosLocacaos) {
		this.proprietariosLocacaos = proprietariosLocacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<Iptu> getIptus() {
		return this.iptus;
	}

	public void setIptus(Set<Iptu> iptus) {
		this.iptus = iptus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<InformacaoAdicional> getInformacaoAdicionals() {
		return this.informacaoAdicionals;
	}

	public void setInformacaoAdicionals(
			Set<InformacaoAdicional> informacaoAdicionals) {
		this.informacaoAdicionals = informacaoAdicionals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<SeguroIncendio> getSeguroIncendios() {
		return this.seguroIncendios;
	}

	public void setSeguroIncendios(Set<SeguroIncendio> seguroIncendios) {
		this.seguroIncendios = seguroIncendios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	@NotAudited
	public Set<SeguroFianca> getSeguroFiancas() {
		return this.seguroFiancas;
	}

	public void setSeguroFiancas(Set<SeguroFianca> seguroFiancas) {
		this.seguroFiancas = seguroFiancas;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "locacaos")
	public List<Fiador> getFiadors() {
		return this.fiadors;
	}

	public void setFiadors(List<Fiador> fiadors) {
		this.fiadors = fiadors;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((descontoLocacaos == null) ? 0 : descontoLocacaos.hashCode());
		result = prime
				* result
				+ ((destinacaoLocacao == null) ? 0 : destinacaoLocacao
						.hashCode());
		result = prime * result + ((fiadors == null) ? 0 : fiadors.hashCode());
		result = prime * result + ((filial == null) ? 0 : filial.hashCode());
		result = prime * result + ((imovel == null) ? 0 : imovel.hashCode());
		result = prime
				* result
				+ ((indicesReajustes == null) ? 0 : indicesReajustes.hashCode());
		result = prime
				* result
				+ ((informacaoAdicionals == null) ? 0 : informacaoAdicionals
						.hashCode());
		result = prime * result + ((iptus == null) ? 0 : iptus.hashCode());
		result = prime * result
				+ ((locAcertoContas == null) ? 0 : locAcertoContas.hashCode());
		result = prime * result
				+ ((locAluguel == null) ? 0 : locAluguel.hashCode());
		result = prime
				* result
				+ ((locCalcularIrFonte == null) ? 0 : locCalcularIrFonte
						.hashCode());
		result = prime * result
				+ ((locCalcularIrrf == null) ? 0 : locCalcularIrrf.hashCode());
		result = prime * result
				+ ((locCarencia == null) ? 0 : locCarencia.hashCode());
		result = prime * result
				+ ((locCategoria == null) ? 0 : locCategoria.hashCode());
		result = prime
				* result
				+ ((locClausulaEspecial == null) ? 0 : locClausulaEspecial
						.hashCode());
		result = prime * result
				+ ((locCorretor == null) ? 0 : locCorretor.hashCode());
		result = prime * result
				+ ((locCorretorNome == null) ? 0 : locCorretorNome.hashCode());
		result = prime * result
				+ ((locDataCadastro == null) ? 0 : locDataCadastro.hashCode());
		result = prime
				* result
				+ ((locDataInicialContrato == null) ? 0
						: locDataInicialContrato.hashCode());
		result = prime * result
				+ ((locDataSituacao == null) ? 0 : locDataSituacao.hashCode());
		result = prime
				* result
				+ ((locDataTerminioContrato == null) ? 0
						: locDataTerminioContrato.hashCode());
		result = prime
				* result
				+ ((locDiaPagamentoLocador == null) ? 0
						: locDiaPagamentoLocador.hashCode());
		result = prime
				* result
				+ ((locDiaPagamentoLocatario == null) ? 0
						: locDiaPagamentoLocatario.hashCode());
		result = prime * result
				+ ((locFuncionario == null) ? 0 : locFuncionario.hashCode());
		result = prime
				* result
				+ ((locFuncionarioIndicacao == null) ? 0
						: locFuncionarioIndicacao.hashCode());
		result = prime * result
				+ ((locGerarBoleto == null) ? 0 : locGerarBoleto.hashCode());
		result = prime * result + locId;
		result = prime * result
				+ ((locInformacoes == null) ? 0 : locInformacoes.hashCode());
		result = prime * result
				+ ((locJurosAtraso == null) ? 0 : locJurosAtraso.hashCode());
		result = prime
				* result
				+ ((locLancamentoMesAno == null) ? 0 : locLancamentoMesAno
						.hashCode());
		result = prime
				* result
				+ ((locMesesDeContrato == null) ? 0 : locMesesDeContrato
						.hashCode());
		result = prime * result
				+ ((locModoPamento == null) ? 0 : locModoPamento.hashCode());
		result = prime * result
				+ ((locMultaAtraso == null) ? 0 : locMultaAtraso.hashCode());
		result = prime * result
				+ ((locMultaRecisao == null) ? 0 : locMultaRecisao.hashCode());
		result = prime
				* result
				+ ((locPrazoGarantia == null) ? 0 : locPrazoGarantia.hashCode());
		result = prime * result
				+ ((locResponsavel == null) ? 0 : locResponsavel.hashCode());
		result = prime
				* result
				+ ((locSeguroIncendioParticular == null) ? 0
						: locSeguroIncendioParticular.hashCode());
		result = prime
				* result
				+ ((locTaxaAdministrativa == null) ? 0 : locTaxaAdministrativa
						.hashCode());
		result = prime * result + ((locTipo == null) ? 0 : locTipo.hashCode());
		result = prime * result
				+ ((locValorAluguel == null) ? 0 : locValorAluguel.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime
				* result
				+ ((proprietariosLocacaos == null) ? 0 : proprietariosLocacaos
						.hashCode());
		result = prime * result
				+ ((seguroFianca == null) ? 0 : seguroFianca.hashCode());
		result = prime * result
				+ ((seguroFiancas == null) ? 0 : seguroFiancas.hashCode());
		result = prime * result
				+ ((seguroIncendio == null) ? 0 : seguroIncendio.hashCode());
		result = prime * result
				+ ((seguroIncendios == null) ? 0 : seguroIncendios.hashCode());
		result = prime * result
				+ ((situacaoLocacao == null) ? 0 : situacaoLocacao.hashCode());
		result = prime * result
				+ ((statusLocacao == null) ? 0 : statusLocacao.hashCode());
		result = prime * result
				+ ((vistoria == null) ? 0 : vistoria.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Locacao other = (Locacao) obj;
		if (descontoLocacaos == null) {
			if (other.descontoLocacaos != null)
				return false;
		} else if (!descontoLocacaos.equals(other.descontoLocacaos))
			return false;
		if (destinacaoLocacao == null) {
			if (other.destinacaoLocacao != null)
				return false;
		} else if (!destinacaoLocacao.equals(other.destinacaoLocacao))
			return false;
		if (fiadors == null) {
			if (other.fiadors != null)
				return false;
		} else if (!fiadors.equals(other.fiadors))
			return false;
		if (filial == null) {
			if (other.filial != null)
				return false;
		} else if (!filial.equals(other.filial))
			return false;
		if (imovel == null) {
			if (other.imovel != null)
				return false;
		} else if (!imovel.equals(other.imovel))
			return false;
		if (indicesReajustes == null) {
			if (other.indicesReajustes != null)
				return false;
		} else if (!indicesReajustes.equals(other.indicesReajustes))
			return false;
		if (informacaoAdicionals == null) {
			if (other.informacaoAdicionals != null)
				return false;
		} else if (!informacaoAdicionals.equals(other.informacaoAdicionals))
			return false;
		if (iptus == null) {
			if (other.iptus != null)
				return false;
		} else if (!iptus.equals(other.iptus))
			return false;
		if (locAcertoContas == null) {
			if (other.locAcertoContas != null)
				return false;
		} else if (!locAcertoContas.equals(other.locAcertoContas))
			return false;
		if (locAluguel == null) {
			if (other.locAluguel != null)
				return false;
		} else if (!locAluguel.equals(other.locAluguel))
			return false;
		if (locCalcularIrFonte == null) {
			if (other.locCalcularIrFonte != null)
				return false;
		} else if (!locCalcularIrFonte.equals(other.locCalcularIrFonte))
			return false;
		if (locCalcularIrrf == null) {
			if (other.locCalcularIrrf != null)
				return false;
		} else if (!locCalcularIrrf.equals(other.locCalcularIrrf))
			return false;
		if (locCarencia == null) {
			if (other.locCarencia != null)
				return false;
		} else if (!locCarencia.equals(other.locCarencia))
			return false;
		if (locCategoria == null) {
			if (other.locCategoria != null)
				return false;
		} else if (!locCategoria.equals(other.locCategoria))
			return false;
		if (locClausulaEspecial == null) {
			if (other.locClausulaEspecial != null)
				return false;
		} else if (!locClausulaEspecial.equals(other.locClausulaEspecial))
			return false;
		if (locCorretor == null) {
			if (other.locCorretor != null)
				return false;
		} else if (!locCorretor.equals(other.locCorretor))
			return false;
		if (locCorretorNome == null) {
			if (other.locCorretorNome != null)
				return false;
		} else if (!locCorretorNome.equals(other.locCorretorNome))
			return false;
		if (locDataCadastro == null) {
			if (other.locDataCadastro != null)
				return false;
		} else if (!locDataCadastro.equals(other.locDataCadastro))
			return false;
		if (locDataInicialContrato == null) {
			if (other.locDataInicialContrato != null)
				return false;
		} else if (!locDataInicialContrato.equals(other.locDataInicialContrato))
			return false;
		if (locDataSituacao == null) {
			if (other.locDataSituacao != null)
				return false;
		} else if (!locDataSituacao.equals(other.locDataSituacao))
			return false;
		if (locDataTerminioContrato == null) {
			if (other.locDataTerminioContrato != null)
				return false;
		} else if (!locDataTerminioContrato
				.equals(other.locDataTerminioContrato))
			return false;
		if (locDiaPagamentoLocador == null) {
			if (other.locDiaPagamentoLocador != null)
				return false;
		} else if (!locDiaPagamentoLocador.equals(other.locDiaPagamentoLocador))
			return false;
		if (locDiaPagamentoLocatario == null) {
			if (other.locDiaPagamentoLocatario != null)
				return false;
		} else if (!locDiaPagamentoLocatario
				.equals(other.locDiaPagamentoLocatario))
			return false;
		if (locFuncionario == null) {
			if (other.locFuncionario != null)
				return false;
		} else if (!locFuncionario.equals(other.locFuncionario))
			return false;
		if (locFuncionarioIndicacao == null) {
			if (other.locFuncionarioIndicacao != null)
				return false;
		} else if (!locFuncionarioIndicacao
				.equals(other.locFuncionarioIndicacao))
			return false;
		if (locGerarBoleto == null) {
			if (other.locGerarBoleto != null)
				return false;
		} else if (!locGerarBoleto.equals(other.locGerarBoleto))
			return false;
		if (locId != other.locId)
			return false;
		if (locInformacoes == null) {
			if (other.locInformacoes != null)
				return false;
		} else if (!locInformacoes.equals(other.locInformacoes))
			return false;
		if (locJurosAtraso == null) {
			if (other.locJurosAtraso != null)
				return false;
		} else if (!locJurosAtraso.equals(other.locJurosAtraso))
			return false;
		if (locLancamentoMesAno == null) {
			if (other.locLancamentoMesAno != null)
				return false;
		} else if (!locLancamentoMesAno.equals(other.locLancamentoMesAno))
			return false;
		if (locMesesDeContrato == null) {
			if (other.locMesesDeContrato != null)
				return false;
		} else if (!locMesesDeContrato.equals(other.locMesesDeContrato))
			return false;
		if (locModoPamento == null) {
			if (other.locModoPamento != null)
				return false;
		} else if (!locModoPamento.equals(other.locModoPamento))
			return false;
		if (locMultaAtraso == null) {
			if (other.locMultaAtraso != null)
				return false;
		} else if (!locMultaAtraso.equals(other.locMultaAtraso))
			return false;
		if (locMultaRecisao == null) {
			if (other.locMultaRecisao != null)
				return false;
		} else if (!locMultaRecisao.equals(other.locMultaRecisao))
			return false;
		if (locPrazoGarantia == null) {
			if (other.locPrazoGarantia != null)
				return false;
		} else if (!locPrazoGarantia.equals(other.locPrazoGarantia))
			return false;
		if (locResponsavel == null) {
			if (other.locResponsavel != null)
				return false;
		} else if (!locResponsavel.equals(other.locResponsavel))
			return false;
		if (locSeguroIncendioParticular == null) {
			if (other.locSeguroIncendioParticular != null)
				return false;
		} else if (!locSeguroIncendioParticular
				.equals(other.locSeguroIncendioParticular))
			return false;
		if (locTaxaAdministrativa == null) {
			if (other.locTaxaAdministrativa != null)
				return false;
		} else if (!locTaxaAdministrativa.equals(other.locTaxaAdministrativa))
			return false;
		if (locTipo == null) {
			if (other.locTipo != null)
				return false;
		} else if (!locTipo.equals(other.locTipo))
			return false;
		if (locValorAluguel == null) {
			if (other.locValorAluguel != null)
				return false;
		} else if (!locValorAluguel.equals(other.locValorAluguel))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (proprietariosLocacaos == null) {
			if (other.proprietariosLocacaos != null)
				return false;
		} else if (!proprietariosLocacaos.equals(other.proprietariosLocacaos))
			return false;
		if (seguroFianca == null) {
			if (other.seguroFianca != null)
				return false;
		} else if (!seguroFianca.equals(other.seguroFianca))
			return false;
		if (seguroFiancas == null) {
			if (other.seguroFiancas != null)
				return false;
		} else if (!seguroFiancas.equals(other.seguroFiancas))
			return false;
		if (seguroIncendio == null) {
			if (other.seguroIncendio != null)
				return false;
		} else if (!seguroIncendio.equals(other.seguroIncendio))
			return false;
		if (seguroIncendios == null) {
			if (other.seguroIncendios != null)
				return false;
		} else if (!seguroIncendios.equals(other.seguroIncendios))
			return false;
		if (situacaoLocacao == null) {
			if (other.situacaoLocacao != null)
				return false;
		} else if (!situacaoLocacao.equals(other.situacaoLocacao))
			return false;
		if (statusLocacao == null) {
			if (other.statusLocacao != null)
				return false;
		} else if (!statusLocacao.equals(other.statusLocacao))
			return false;
		if (vistoria == null) {
			if (other.vistoria != null)
				return false;
		} else if (!vistoria.equals(other.vistoria))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Locacao [locId=" + locId + "]";
	}

}
