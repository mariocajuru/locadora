package br.com.locadora.modelo;

// Generated 25/06/2014 10:05:00 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Situacaoimovel generated by hbm2java
 */
@Audited
@Entity
@Table(name = "SITUACAOIMOVEL", catalog = "renovarsistemas")
@AuditTable(value="SITUACAOIMOVEL", schema="log", catalog="renovarsistemas")
public class Situacaoimovel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8256460559151162256L;
	private int sitId;
	private String sitNome;
	private String sitDescricao;
	private Set<Imovel> imovels = new HashSet<Imovel>(0);
	private Set<SituacaoLocacao> situacaoLocacaos = new HashSet<SituacaoLocacao>(
			0);

	public Situacaoimovel() {
	}

	public Situacaoimovel(int sitId, String sitNome) {
		this.sitId = sitId;
		this.sitNome = sitNome;
	}

	public Situacaoimovel(int sitId, String sitNome, String sitDescricao,
			Set<Imovel> imovels, Set<SituacaoLocacao> situacaoLocacaos) {
		this.sitId = sitId;
		this.sitNome = sitNome;
		this.sitDescricao = sitDescricao;
		this.imovels = imovels;
		this.situacaoLocacaos = situacaoLocacaos;
	}

	@Id
	@GeneratedValue
	@Column(name = "SIT_ID", unique = true, nullable = false)
	public int getSitId() {
		return this.sitId;
	}

	public void setSitId(int sitId) {
		this.sitId = sitId;
	}

	@Column(name = "SIT_NOME", nullable = false, length = 40)
	public String getSitNome() {
		return this.sitNome;
	}

	public void setSitNome(String sitNome) {
		this.sitNome = sitNome;
	}

	@Column(name = "SIT_DESCRICAO", length = 70)
	public String getSitDescricao() {
		return this.sitDescricao;
	}

	public void setSitDescricao(String sitDescricao) {
		this.sitDescricao = sitDescricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "situacaoimovel")
	@NotAudited
	public Set<Imovel> getImovels() {
		return this.imovels;
	}

	public void setImovels(Set<Imovel> imovels) {
		this.imovels = imovels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "situacaoimovel")
	@NotAudited
	public Set<SituacaoLocacao> getSituacaoLocacaos() {
		return this.situacaoLocacaos;
	}

	public void setSituacaoLocacaos(Set<SituacaoLocacao> situacaoLocacaos) {
		this.situacaoLocacaos = situacaoLocacaos;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((imovels == null) ? 0 : imovels.hashCode());
		result = prime * result
				+ ((sitDescricao == null) ? 0 : sitDescricao.hashCode());
		result = prime * result + sitId;
		result = prime * result + ((sitNome == null) ? 0 : sitNome.hashCode());
		result = prime
				* result
				+ ((situacaoLocacaos == null) ? 0 : situacaoLocacaos.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Situacaoimovel other = (Situacaoimovel) obj;
		if (imovels == null) {
			if (other.imovels != null)
				return false;
		} else if (!imovels.equals(other.imovels))
			return false;
		if (sitDescricao == null) {
			if (other.sitDescricao != null)
				return false;
		} else if (!sitDescricao.equals(other.sitDescricao))
			return false;
		if (sitId != other.sitId)
			return false;
		if (sitNome == null) {
			if (other.sitNome != null)
				return false;
		} else if (!sitNome.equals(other.sitNome))
			return false;
		if (situacaoLocacaos == null) {
			if (other.situacaoLocacaos != null)
				return false;
		} else if (!situacaoLocacaos.equals(other.situacaoLocacaos))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Situacaoimovel [sitId=" + sitId + "]";
	}

}
