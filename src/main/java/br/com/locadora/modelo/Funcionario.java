package br.com.locadora.modelo;

// Generated 23/01/2015 09:07:25 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * Funcionario generated by hbm2java
 */
@Audited
@Entity
@Table(name = "FUNCIONARIO", catalog = "renovarsistemas")
@AuditTable(value="FUNCIONARIO", schema="log", catalog="renovarsistemas")
public class Funcionario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4065540171075936034L;
	private int pesId;
	private Filial filial;
	private Pessoa pessoa;
	private String funLoguin;
	private String funSenha;
	private String funObservacao;
	private String funCargo;
	private Boolean funAtivo;
	private Set<Vistoria> vistorias = new HashSet<Vistoria>(0);
	private Set<EmprestimoChave> emprestimoChaves = new HashSet<EmprestimoChave>(
			0);
	private Set<MensagemFuncionario> mensagemFuncionarios = new HashSet<MensagemFuncionario>(
			0);
	private Set<Proposta> propostas = new HashSet<Proposta>(0);
	private Set<Imovel> imovels = new HashSet<Imovel>(0);
	private Set<String> permissao=new HashSet<String>();

	public Funcionario() {
	}

	public Funcionario(Filial filial, Pessoa pessoa) {
		this.filial = filial;
		this.pessoa = pessoa;
	}

	public Funcionario(Filial filial, Pessoa pessoa, String funLoguin,
			String funSenha, String funObservacao, String funCargo,
			Boolean funAtivo, Set<Vistoria> vistorias,
			Set<EmprestimoChave> emprestimoChaves,
			Set<MensagemFuncionario> mensagemFuncionarios,
			Set<Proposta> propostas, Set<Imovel> imovels,Set<String> permissao) {
		this.filial = filial;
		this.pessoa = pessoa;
		this.funLoguin = funLoguin;
		this.funSenha = funSenha;
		this.funObservacao = funObservacao;
		this.funCargo = funCargo;
		this.funAtivo = funAtivo;
		this.vistorias = vistorias;
		this.emprestimoChaves = emprestimoChaves;
		this.mensagemFuncionarios = mensagemFuncionarios;
		this.propostas = propostas;
		this.imovels = imovels;
		this.permissao=permissao;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PES_ID", unique = true, nullable = false)
	public int getPesId() {
		return this.pesId;
	}

	public void setPesId(int pesId) {
		this.pesId = pesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIL_ID", nullable = false)
	public Filial getFilial() {
		return this.filial;
	}

	public void setFilial(Filial filial) {
		this.filial = filial;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "FUN_LOGUIN", length = 90)
	public String getFunLoguin() {
		return this.funLoguin;
	}

	public void setFunLoguin(String funLoguin) {
		this.funLoguin = funLoguin;
	}

	@Column(name = "FUN_SENHA", length = 900)
	public String getFunSenha() {
		return this.funSenha;
	}

	public void setFunSenha(String funSenha) {
		this.funSenha = funSenha;
	}

	@Column(name = "FUN_OBSERVACAO", length = 150)
	public String getFunObservacao() {
		return this.funObservacao;
	}

	public void setFunObservacao(String funObservacao) {
		this.funObservacao = funObservacao;
	}

	@Column(name = "FUN_CARGO", length = 30)
	public String getFunCargo() {
		return this.funCargo;
	}

	public void setFunCargo(String funCargo) {
		this.funCargo = funCargo;
	}

	@Column(name = "FUN_ATIVO")
	public Boolean getFunAtivo() {
		return this.funAtivo;
	}

	public void setFunAtivo(Boolean funAtivo) {
		this.funAtivo = funAtivo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	@NotAudited
	public Set<Vistoria> getVistorias() {
		return this.vistorias;
	}

	public void setVistorias(Set<Vistoria> vistorias) {
		this.vistorias = vistorias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	@NotAudited
	public Set<EmprestimoChave> getEmprestimoChaves() {
		return this.emprestimoChaves;
	}

	public void setEmprestimoChaves(Set<EmprestimoChave> emprestimoChaves) {
		this.emprestimoChaves = emprestimoChaves;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	@NotAudited
	public Set<MensagemFuncionario> getMensagemFuncionarios() {
		return this.mensagemFuncionarios;
	}

	public void setMensagemFuncionarios(
			Set<MensagemFuncionario> mensagemFuncionarios) {
		this.mensagemFuncionarios = mensagemFuncionarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	@NotAudited
	public Set<Proposta> getPropostas() {
		return this.propostas;
	}

	public void setPropostas(Set<Proposta> propostas) {
		this.propostas = propostas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	@NotAudited
	public Set<Imovel> getImovels() {
		return this.imovels;
	}

	public void setImovels(Set<Imovel> imovels) {
		this.imovels = imovels;
	}
	
	@ElementCollection(targetClass = String.class)
	@JoinTable(
	           name = "FUNCIONARIO_PERMISSAO", 
			     uniqueConstraints = {@UniqueConstraint(columnNames = {"FUNCIONARIO", "PERMISSAO"})}, 
			     joinColumns = @JoinColumn(name = "FUNCIONARIO"))
	@Column(name = "PERMISSAO", length = 600)
	public Set<String> getPermissao() {
		return permissao;
	}

	public void setPermissao(Set<String> permissao) {
		this.permissao = permissao;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((emprestimoChaves == null) ? 0 : emprestimoChaves.hashCode());
		result = prime * result + ((filial == null) ? 0 : filial.hashCode());
		result = prime * result
				+ ((funAtivo == null) ? 0 : funAtivo.hashCode());
		result = prime * result
				+ ((funCargo == null) ? 0 : funCargo.hashCode());
		result = prime * result
				+ ((funLoguin == null) ? 0 : funLoguin.hashCode());
		result = prime * result
				+ ((funObservacao == null) ? 0 : funObservacao.hashCode());
		result = prime * result
				+ ((funSenha == null) ? 0 : funSenha.hashCode());
		result = prime * result + ((imovels == null) ? 0 : imovels.hashCode());
		result = prime
				* result
				+ ((mensagemFuncionarios == null) ? 0 : mensagemFuncionarios
						.hashCode());
		result = prime * result
				+ ((permissao == null) ? 0 : permissao.hashCode());
		result = prime * result + pesId;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result
				+ ((propostas == null) ? 0 : propostas.hashCode());
		result = prime * result
				+ ((vistorias == null) ? 0 : vistorias.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Funcionario other = (Funcionario) obj;
		if (emprestimoChaves == null) {
			if (other.emprestimoChaves != null)
				return false;
		} else if (!emprestimoChaves.equals(other.emprestimoChaves))
			return false;
		if (filial == null) {
			if (other.filial != null)
				return false;
		} else if (!filial.equals(other.filial))
			return false;
		if (funAtivo == null) {
			if (other.funAtivo != null)
				return false;
		} else if (!funAtivo.equals(other.funAtivo))
			return false;
		if (funCargo == null) {
			if (other.funCargo != null)
				return false;
		} else if (!funCargo.equals(other.funCargo))
			return false;
		if (funLoguin == null) {
			if (other.funLoguin != null)
				return false;
		} else if (!funLoguin.equals(other.funLoguin))
			return false;
		if (funObservacao == null) {
			if (other.funObservacao != null)
				return false;
		} else if (!funObservacao.equals(other.funObservacao))
			return false;
		if (funSenha == null) {
			if (other.funSenha != null)
				return false;
		} else if (!funSenha.equals(other.funSenha))
			return false;
		if (imovels == null) {
			if (other.imovels != null)
				return false;
		} else if (!imovels.equals(other.imovels))
			return false;
		if (mensagemFuncionarios == null) {
			if (other.mensagemFuncionarios != null)
				return false;
		} else if (!mensagemFuncionarios.equals(other.mensagemFuncionarios))
			return false;
		if (permissao == null) {
			if (other.permissao != null)
				return false;
		} else if (!permissao.equals(other.permissao))
			return false;
		if (pesId != other.pesId)
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (propostas == null) {
			if (other.propostas != null)
				return false;
		} else if (!propostas.equals(other.propostas))
			return false;
		if (vistorias == null) {
			if (other.vistorias != null)
				return false;
		} else if (!vistorias.equals(other.vistorias))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Funcionario [pesId=" + pesId + "]";
	}



}
