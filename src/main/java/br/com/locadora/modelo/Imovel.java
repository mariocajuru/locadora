package br.com.locadora.modelo;

// Generated 25/08/2014 14:40:22 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

import br.com.locadora.rn.ProprietarioRN;

/**
 * Imovel generated by hbm2java
 */
@Audited
@Entity
@Table(name = "IMOVEL", catalog = "renovarsistemas")
@AuditTable(value="IMOVEL", schema="log", catalog="renovarsistemas")
public class Imovel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7490268986292698741L;
	private int imoId;
	private Endereco endereco;
	private Funcionario funcionario;
	private Situacaoimovel situacaoimovel;
	private Tipoimovel tipoimovel;
	private String imoObservacao;
	private String imoPedencia;
	private Date imoDataRejeicao;
	private Date imoDataProspeccao;
	private Double imoValorMercado;
	private Date imoDataConstrucao;
	private Date imoDataCadastro;
	private Boolean imoEfetivo;
	private Integer imoAreaImovel;
	private Integer imoAreaTerreno;
	private String imoCategoria;
	private Integer imoPosicao;
	private Boolean imoEmNegociacao;
	private Date imoDataParaNegociacao;
	private Boolean imoVenda;
	private Boolean imoPlaca;
	private Boolean imoLocacao;
	private Boolean imoChave;
	private Integer imoChaveQtd;
	private Integer imoChavePosicao;
	private Double imoValorCondominio;
	private String imoObservacaoVistoria;
	private String imoIdluz;
	private String imoIdagua;
	private Boolean imoDisponivelWeb;
	private Boolean imoFoto;
	private Boolean imoExclusivo;
	private Date imoDataUltimaAlteracao;
	private Date imoVagoDesde;
	private Integer imoQtdCaptado;
	private String imoGarantia;
	private Double imoTaxa;
	private Boolean imoPrimeiroAluguel;
	private Boolean imoChaveProprietario;
	private Date imoDataInicioLocacao;
	private Integer imoIdCaptador;
	private Date imoDataCaptacao;
	private Integer imoDiasDeCadastro;
	private Boolean imoContratoArquivado;
	private Integer imoIdFuncionarioIndicacao;
	private Date imoDataAlteracaoSituacao;
	private BigDecimal imoValorAluguel;
	private Integer imoPeriodoCadastro;
	private Set<ChaveNoQuadro> chaveNoQuadros = new HashSet<ChaveNoQuadro>(0);
	private Set<Proprietario> proprietarios = new HashSet<Proprietario>(0);
	private Set<EmprestimoChave> emprestimoChaves = new HashSet<EmprestimoChave>(
			0);
	private Set<Fotoimovel> fotoimovels = new HashSet<Fotoimovel>(0);
	private Set<Locacao> locacaos = new HashSet<Locacao>(0);
	private List<TemPerto> temPertos = new ArrayList<TemPerto>(0);
	private Set<Proposta> propostas = new HashSet<Proposta>(0);
	private Set<Vistoria> vistorias = new HashSet<Vistoria>(0);
	private Set<ImovelCaracteristicas> imovelCaracteristicases = new HashSet<ImovelCaracteristicas>(
			0);

	public Imovel() {
	}

	public Imovel(int imoId, Endereco endereco, Funcionario funcionario,
			Situacaoimovel situacaoimovel, Tipoimovel tipoimovel) {
		this.imoId = imoId;
		this.endereco = endereco;
		this.funcionario = funcionario;
		this.situacaoimovel = situacaoimovel;
		this.tipoimovel = tipoimovel;
	}

	public Imovel(int imoId, Endereco endereco, Funcionario funcionario,
			Situacaoimovel situacaoimovel, Tipoimovel tipoimovel,
			String imoObservacao, String imoPedencia, Date imoDataRejeicao,
			Date imoDataProspeccao, Double imoValorMercado,
			Date imoDataConstrucao, Date imoDataCadastro, Boolean imoEfetivo,
			Integer imoAreaImovel, Integer imoAreaTerreno, String imoCategoria,
			Integer imoPosicao, Boolean imoEmNegociacao,
			Date imoDataParaNegociacao, Boolean imoVenda, Boolean imoLocacao,
			Boolean imoChave, Integer imoChaveQtd, Integer imoChavePosicao,
			Double imoValorCondominio, String imoObservacaoVistoria,
			String imoIdluz, String imoIdagua, Boolean imoDisponivelWeb,
			Boolean imoFoto, Boolean imoExclusivo, Date imoDataUltimaAlteracao,
			Date imoVagoDesde, Integer imoQtdCaptado, String imoGarantia,
			Double imoTaxa, Boolean imoPrimeiroAluguel,Boolean imoPlaca,
			Boolean imoChaveProprietario, Date imoDataInicioLocacao,
			Integer imoIdCaptador, Date imoDataCaptacao,
			Integer imoDiasDeCadastro, Boolean imoContratoArquivado,
			Integer imoIdFuncionarioIndicacao, Date imoDataAlteracaoSituacao,
			BigDecimal imoValorAluguel, Integer imoPeriodoCadastro,
			Set<ChaveNoQuadro> chaveNoQuadros, Set<Proprietario> proprietarios,
			Set<EmprestimoChave> emprestimoChaves, Set<Fotoimovel> fotoimovels,
			Set<Locacao> locacaos, List<TemPerto> temPertos,
			Set<Proposta> propostas, Set<Vistoria> vistorias,
			Set<ImovelCaracteristicas> imovelCaracteristicases) {
		this.imoId = imoId;
		this.endereco = endereco;
		this.funcionario = funcionario;
		this.situacaoimovel = situacaoimovel;
		this.tipoimovel = tipoimovel;
		this.imoObservacao = imoObservacao;
		this.imoPedencia = imoPedencia;
		this.imoPlaca = imoPlaca;
		this.imoDataRejeicao = imoDataRejeicao;
		this.imoDataProspeccao = imoDataProspeccao;
		this.imoValorMercado = imoValorMercado;
		this.imoDataConstrucao = imoDataConstrucao;
		this.imoDataCadastro = imoDataCadastro;
		this.imoEfetivo = imoEfetivo;
		this.imoAreaImovel = imoAreaImovel;
		this.imoAreaTerreno = imoAreaTerreno;
		this.imoCategoria = imoCategoria;
		this.imoPosicao = imoPosicao;
		this.imoEmNegociacao = imoEmNegociacao;
		this.imoDataParaNegociacao = imoDataParaNegociacao;
		this.imoVenda = imoVenda;
		this.imoLocacao = imoLocacao;
		this.imoChave = imoChave;
		this.imoChaveQtd = imoChaveQtd;
		this.imoChavePosicao = imoChavePosicao;
		this.imoValorCondominio = imoValorCondominio;
		this.imoObservacaoVistoria = imoObservacaoVistoria;
		this.imoIdluz = imoIdluz;
		this.imoIdagua = imoIdagua;
		this.imoDisponivelWeb = imoDisponivelWeb;
		this.imoFoto = imoFoto;
		this.imoExclusivo = imoExclusivo;
		this.imoDataUltimaAlteracao = imoDataUltimaAlteracao;
		this.imoVagoDesde = imoVagoDesde;
		this.imoQtdCaptado = imoQtdCaptado;
		this.imoGarantia = imoGarantia;
		this.imoTaxa = imoTaxa;
		this.imoPrimeiroAluguel = imoPrimeiroAluguel;
		this.imoChaveProprietario = imoChaveProprietario;
		this.imoDataInicioLocacao = imoDataInicioLocacao;
		this.imoIdCaptador = imoIdCaptador;
		this.imoDataCaptacao = imoDataCaptacao;
		this.imoDiasDeCadastro = imoDiasDeCadastro;
		this.imoContratoArquivado = imoContratoArquivado;
		this.imoIdFuncionarioIndicacao = imoIdFuncionarioIndicacao;
		this.imoDataAlteracaoSituacao = imoDataAlteracaoSituacao;
		this.imoValorAluguel = imoValorAluguel;
		this.imoPeriodoCadastro = imoPeriodoCadastro;
		this.chaveNoQuadros = chaveNoQuadros;
		this.proprietarios = proprietarios;
		this.emprestimoChaves = emprestimoChaves;
		this.fotoimovels = fotoimovels;
		this.locacaos = locacaos;
		this.temPertos = temPertos;
		this.propostas = propostas;
		this.vistorias = vistorias;
		this.imovelCaracteristicases = imovelCaracteristicases;
	}

	@Id
	@GeneratedValue
	@Column(name = "IMO_ID", unique = true, nullable = false)
	public int getImoId() {
		return this.imoId;
	}

	public void setImoId(int imoId) {
		this.imoId = imoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "END_ID", nullable = false)
	public Endereco getEndereco() {
		return this.endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Funcionario getFuncionario() {
		return this.funcionario;
	}

	public void setFuncionario(Funcionario funcionario) {
		this.funcionario = funcionario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SIT_ID", nullable = false)
	public Situacaoimovel getSituacaoimovel() {
		return this.situacaoimovel;
	}

	public void setSituacaoimovel(Situacaoimovel situacaoimovel) {
		this.situacaoimovel = situacaoimovel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIP_ID", nullable = false)
	public Tipoimovel getTipoimovel() {
		return this.tipoimovel;
	}

	public void setTipoimovel(Tipoimovel tipoimovel) {
		this.tipoimovel = tipoimovel;
	}

	@Column(name = "IMO_OBSERVACAO", length = 250)
	public String getImoObservacao() {
		return this.imoObservacao;
	}

	public void setImoObservacao(String imoObservacao) {
		this.imoObservacao = imoObservacao;
	}

	@Column(name = "IMO_PEDENCIA", length = 50)
	public String getImoPedencia() {
		return this.imoPedencia;
	}

	public void setImoPedencia(String imoPedencia) {
		this.imoPedencia = imoPedencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_REJEICAO", length = 23)
	public Date getImoDataRejeicao() {
		return this.imoDataRejeicao;
	}

	public void setImoDataRejeicao(Date imoDataRejeicao) {
		this.imoDataRejeicao = imoDataRejeicao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_PROSPECCAO", length = 23)
	public Date getImoDataProspeccao() {
		return this.imoDataProspeccao;
	}

	public void setImoDataProspeccao(Date imoDataProspeccao) {
		this.imoDataProspeccao = imoDataProspeccao;
	}

	@Column(name = "IMO_VALOR_MERCADO")
	public Double getImoValorMercado() {
		return this.imoValorMercado;
	}

	public void setImoValorMercado(Double imoValorMercado) {
		this.imoValorMercado = imoValorMercado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_CONSTRUCAO", length = 23)
	public Date getImoDataConstrucao() {
		return this.imoDataConstrucao;
	}

	public void setImoDataConstrucao(Date imoDataConstrucao) {
		this.imoDataConstrucao = imoDataConstrucao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_CADASTRO", length = 23)
	public Date getImoDataCadastro() {
		return this.imoDataCadastro;
	}

	public void setImoDataCadastro(Date imoDataCadastro) {
		this.imoDataCadastro = imoDataCadastro;
	}

	@Column(name = "IMO_EFETIVO")
	public Boolean getImoEfetivo() {
		return this.imoEfetivo;
	}

	public void setImoEfetivo(Boolean imoEfetivo) {
		this.imoEfetivo = imoEfetivo;
	}

	@Column(name = "IMO_AREA_IMOVEL")
	public Integer getImoAreaImovel() {
		return this.imoAreaImovel;
	}

	public void setImoAreaImovel(Integer imoAreaImovel) {
		this.imoAreaImovel = imoAreaImovel;
	}

	@Column(name = "IMO_AREA_TERRENO")
	public Integer getImoAreaTerreno() {
		return this.imoAreaTerreno;
	}

	public void setImoAreaTerreno(Integer imoAreaTerreno) {
		this.imoAreaTerreno = imoAreaTerreno;
	}

	@Column(name = "IMO_CATEGORIA", length = 80)
	public String getImoCategoria() {
		return this.imoCategoria;
	}

	public void setImoCategoria(String imoCategoria) {
		this.imoCategoria = imoCategoria;
	}

	@Column(name = "IMO_POSICAO")
	public Integer getImoPosicao() {
		return this.imoPosicao;
	}

	public void setImoPosicao(Integer imoPosicao) {
		this.imoPosicao = imoPosicao;
	}

	@Column(name = "IMO_EM_NEGOCIACAO")
	public Boolean getImoEmNegociacao() {
		return this.imoEmNegociacao;
	}

	public void setImoEmNegociacao(Boolean imoEmNegociacao) {
		this.imoEmNegociacao = imoEmNegociacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_PARA_NEGOCIACAO", length = 23)
	public Date getImoDataParaNegociacao() {
		return this.imoDataParaNegociacao;
	}

	public void setImoDataParaNegociacao(Date imoDataParaNegociacao) {
		this.imoDataParaNegociacao = imoDataParaNegociacao;
	}

	@Column(name = "IMO_VENDA")
	public Boolean getImoVenda() {
		return this.imoVenda;
	}

	public void setImoVenda(Boolean imoVenda) {
		this.imoVenda = imoVenda;
	}

	@Column(name = "IMO_LOCACAO")
	public Boolean getImoLocacao() {
		return this.imoLocacao;
	}

	public void setImoLocacao(Boolean imoLocacao) {
		this.imoLocacao = imoLocacao;
	}

	@Column(name = "IMO_CHAVE")
	public Boolean getImoChave() {
		return this.imoChave;
	}

	public void setImoChave(Boolean imoChave) {
		this.imoChave = imoChave;
	}

	@Column(name = "IMO_CHAVE_QTD")
	public Integer getImoChaveQtd() {
		return this.imoChaveQtd;
	}

	public void setImoChaveQtd(Integer imoChaveQtd) {
		this.imoChaveQtd = imoChaveQtd;
	}

	@Column(name = "IMO_CHAVE_POSICAO")
	public Integer getImoChavePosicao() {
		return this.imoChavePosicao;
	}

	public void setImoChavePosicao(Integer imoChavePosicao) {
		this.imoChavePosicao = imoChavePosicao;
	}

	@Column(name = "IMO_VALOR_CONDOMINIO", precision = 53, scale = 0)
	public Double getImoValorCondominio() {
		return this.imoValorCondominio;
	}

	public void setImoValorCondominio(Double imoValorCondominio) {
		this.imoValorCondominio = imoValorCondominio;
	}

	@Column(name = "IMO_OBSERVACAO_VISTORIA", length = 250)
	public String getImoObservacaoVistoria() {
		return this.imoObservacaoVistoria;
	}

	public void setImoObservacaoVistoria(String imoObservacaoVistoria) {
		this.imoObservacaoVistoria = imoObservacaoVistoria;
	}

	@Column(name = "IMO_IDLUZ", length = 50)
	public String getImoIdluz() {
		return this.imoIdluz;
	}

	public void setImoIdluz(String imoIdluz) {
		this.imoIdluz = imoIdluz;
	}

	@Column(name = "IMO_IDAGUA", length = 50)
	public String getImoIdagua() {
		return this.imoIdagua;
	}

	public void setImoIdagua(String imoIdagua) {
		this.imoIdagua = imoIdagua;
	}

	@Column(name = "IMO_DISPONIVEL_WEB")
	public Boolean getImoDisponivelWeb() {
		return this.imoDisponivelWeb;
	}

	public void setImoDisponivelWeb(Boolean imoDisponivelWeb) {
		this.imoDisponivelWeb = imoDisponivelWeb;
	}

	@Column(name = "IMO_FOTO")
	public Boolean getImoFoto() {
		return this.imoFoto;
	}

	public void setImoFoto(Boolean imoFoto) {
		this.imoFoto = imoFoto;
	}

	@Column(name = "IMO_EXCLUSIVO")
	public Boolean getImoExclusivo() {
		return this.imoExclusivo;
	}

	public void setImoExclusivo(Boolean imoExclusivo) {
		this.imoExclusivo = imoExclusivo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_ULTIMA_ALTERACAO", length = 23)
	public Date getImoDataUltimaAlteracao() {
		return this.imoDataUltimaAlteracao;
	}

	public void setImoDataUltimaAlteracao(Date imoDataUltimaAlteracao) {
		this.imoDataUltimaAlteracao = imoDataUltimaAlteracao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_VAGO_DESDE", length = 23)
	public Date getImoVagoDesde() {
		return this.imoVagoDesde;
	}

	public void setImoVagoDesde(Date imoVagoDesde) {
		this.imoVagoDesde = imoVagoDesde;
	}

	@Column(name = "IMO_QTD_CAPTADO")
	public Integer getImoQtdCaptado() {
		return this.imoQtdCaptado;
	}

	public void setImoQtdCaptado(Integer imoQtdCaptado) {
		this.imoQtdCaptado = imoQtdCaptado;
	}

	@Column(name = "IMO_GARANTIA", length = 30)
	public String getImoGarantia() {
		return this.imoGarantia;
	}

	public void setImoGarantia(String imoGarantia) {
		this.imoGarantia = imoGarantia;
	}

	@Column(name = "IMO_TAXA", precision = 53, scale = 0)
	public Double getImoTaxa() {
		return this.imoTaxa;
	}

	public void setImoTaxa(Double imoTaxa) {
		this.imoTaxa = imoTaxa;
	}
	
	@Column(name = "IMO_PLACA")
	public Boolean getImoPlaca() {
		return this.imoPlaca;
	}

	public void setImoPlaca(Boolean imoPlaca) {
		this.imoPlaca = imoPlaca;
	}

	@Column(name = "IMO_PRIMEIRO_ALUGUEL")
	public Boolean getImoPrimeiroAluguel() {
		return this.imoPrimeiroAluguel;
	}

	public void setImoPrimeiroAluguel(Boolean imoPrimeiroAluguel) {
		this.imoPrimeiroAluguel = imoPrimeiroAluguel;
	}

	@Column(name = "IMO_CHAVE_PROPRIETARIO")
	public Boolean getImoChaveProprietario() {
		return this.imoChaveProprietario;
	}

	public void setImoChaveProprietario(Boolean imoChaveProprietario) {
		this.imoChaveProprietario = imoChaveProprietario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_INICIO_LOCACAO", length = 23)
	public Date getImoDataInicioLocacao() {
		return this.imoDataInicioLocacao;
	}

	public void setImoDataInicioLocacao(Date imoDataInicioLocacao) {
		this.imoDataInicioLocacao = imoDataInicioLocacao;
	}

	@Column(name = "IMO_ID_CAPTADOR")
	public Integer getImoIdCaptador() {
		return this.imoIdCaptador;
	}

	public void setImoIdCaptador(Integer imoIdCaptador) {
		this.imoIdCaptador = imoIdCaptador;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_CAPTACAO", length = 23)
	public Date getImoDataCaptacao() {
		return this.imoDataCaptacao;
	}

	public void setImoDataCaptacao(Date imoDataCaptacao) {
		this.imoDataCaptacao = imoDataCaptacao;
	}

	@Column(name = "IMO_DIAS_DE_CADASTRO")
	public Integer getImoDiasDeCadastro() {
		return this.imoDiasDeCadastro;
	}

	public void setImoDiasDeCadastro(Integer imoDiasDeCadastro) {
		this.imoDiasDeCadastro = imoDiasDeCadastro;
	}

	@Column(name = "IMO_CONTRATO_ARQUIVADO")
	public Boolean getImoContratoArquivado() {
		return this.imoContratoArquivado;
	}

	public void setImoContratoArquivado(Boolean imoContratoArquivado) {
		this.imoContratoArquivado = imoContratoArquivado;
	}

	@Column(name = "IMO_ID_FUNCIONARIO_INDICACAO")
	public Integer getImoIdFuncionarioIndicacao() {
		return this.imoIdFuncionarioIndicacao;
	}

	public void setImoIdFuncionarioIndicacao(Integer imoIdFuncionarioIndicacao) {
		this.imoIdFuncionarioIndicacao = imoIdFuncionarioIndicacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMO_DATA_ALTERACAO_SITUACAO", length = 23)
	public Date getImoDataAlteracaoSituacao() {
		return this.imoDataAlteracaoSituacao;
	}

	public void setImoDataAlteracaoSituacao(Date imoDataAlteracaoSituacao) {
		this.imoDataAlteracaoSituacao = imoDataAlteracaoSituacao;
	}

	@Column(name = "IMO_VALOR_ALUGUEL", precision = 10)
	public BigDecimal getImoValorAluguel() {
		return this.imoValorAluguel;
	}

	public void setImoValorAluguel(BigDecimal imoValorAluguel) {
		this.imoValorAluguel = imoValorAluguel;
	}

	@Column(name = "IMO_PERIODO_CADASTRO")
	public Integer getImoPeriodoCadastro() {
		return this.imoPeriodoCadastro;
	}

	public void setImoPeriodoCadastro(Integer imoPeriodoCadastro) {
		this.imoPeriodoCadastro = imoPeriodoCadastro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<ChaveNoQuadro> getChaveNoQuadros() {
		return this.chaveNoQuadros;
	}

	public void setChaveNoQuadros(Set<ChaveNoQuadro> chaveNoQuadros) {
		this.chaveNoQuadros = chaveNoQuadros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<Proprietario> getProprietarios() {
		return this.proprietarios;
	}

	public void setProprietarios(Set<Proprietario> proprietarios) {
		this.proprietarios = proprietarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<EmprestimoChave> getEmprestimoChaves() {
		return this.emprestimoChaves;
	}

	public void setEmprestimoChaves(Set<EmprestimoChave> emprestimoChaves) {
		this.emprestimoChaves = emprestimoChaves;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<Fotoimovel> getFotoimovels() {
		return this.fotoimovels;
	}

	public void setFotoimovels(Set<Fotoimovel> fotoimovels) {
		this.fotoimovels = fotoimovels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<Locacao> getLocacaos() {
		return this.locacaos;
	}

	public void setLocacaos(Set<Locacao> locacaos) {
		this.locacaos = locacaos;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "IMOVEL_TEM_PERTO", catalog = "renovarsistemas", joinColumns = { @JoinColumn(name = "IMO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "TEM_PER_ID", nullable = false, updatable = false) })
	public List<TemPerto> getTemPertos() {
		return this.temPertos;
	}

	public void setTemPertos(List<TemPerto> temPertos) {
		this.temPertos = temPertos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<Proposta> getPropostas() {
		return this.propostas;
	}

	public void setPropostas(Set<Proposta> propostas) {
		this.propostas = propostas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<Vistoria> getVistorias() {
		return this.vistorias;
	}

	public void setVistorias(Set<Vistoria> vistorias) {
		this.vistorias = vistorias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	@NotAudited
	public Set<ImovelCaracteristicas> getImovelCaracteristicases() {
		return this.imovelCaracteristicases;
	}

	public void setImovelCaracteristicases(
			Set<ImovelCaracteristicas> imovelCaracteristicases) {
		this.imovelCaracteristicases = imovelCaracteristicases;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((chaveNoQuadros == null) ? 0 : chaveNoQuadros.hashCode());
		result = prime
				* result
				+ ((emprestimoChaves == null) ? 0 : emprestimoChaves.hashCode());
		result = prime * result
				+ ((endereco == null) ? 0 : endereco.hashCode());
		result = prime * result
				+ ((fotoimovels == null) ? 0 : fotoimovels.hashCode());
		result = prime * result
				+ ((funcionario == null) ? 0 : funcionario.hashCode());
		result = prime * result
				+ ((imoAreaImovel == null) ? 0 : imoAreaImovel.hashCode());
		result = prime * result
				+ ((imoAreaTerreno == null) ? 0 : imoAreaTerreno.hashCode());
		result = prime * result
				+ ((imoCategoria == null) ? 0 : imoCategoria.hashCode());
		result = prime * result
				+ ((imoChave == null) ? 0 : imoChave.hashCode());
		result = prime * result
				+ ((imoChavePosicao == null) ? 0 : imoChavePosicao.hashCode());
		result = prime
				* result
				+ ((imoChaveProprietario == null) ? 0 : imoChaveProprietario
						.hashCode());
		result = prime * result
				+ ((imoChaveQtd == null) ? 0 : imoChaveQtd.hashCode());
		result = prime
				* result
				+ ((imoContratoArquivado == null) ? 0 : imoContratoArquivado
						.hashCode());
		result = prime
				* result
				+ ((imoDataAlteracaoSituacao == null) ? 0
						: imoDataAlteracaoSituacao.hashCode());
		result = prime * result
				+ ((imoDataCadastro == null) ? 0 : imoDataCadastro.hashCode());
		result = prime * result
				+ ((imoDataCaptacao == null) ? 0 : imoDataCaptacao.hashCode());
		result = prime
				* result
				+ ((imoDataConstrucao == null) ? 0 : imoDataConstrucao
						.hashCode());
		result = prime
				* result
				+ ((imoDataInicioLocacao == null) ? 0 : imoDataInicioLocacao
						.hashCode());
		result = prime
				* result
				+ ((imoDataParaNegociacao == null) ? 0 : imoDataParaNegociacao
						.hashCode());
		result = prime
				* result
				+ ((imoDataProspeccao == null) ? 0 : imoDataProspeccao
						.hashCode());
		result = prime * result
				+ ((imoDataRejeicao == null) ? 0 : imoDataRejeicao.hashCode());
		result = prime
				* result
				+ ((imoDataUltimaAlteracao == null) ? 0
						: imoDataUltimaAlteracao.hashCode());
		result = prime
				* result
				+ ((imoDiasDeCadastro == null) ? 0 : imoDiasDeCadastro
						.hashCode());
		result = prime
				* result
				+ ((imoDisponivelWeb == null) ? 0 : imoDisponivelWeb.hashCode());
		result = prime * result
				+ ((imoEfetivo == null) ? 0 : imoEfetivo.hashCode());
		result = prime * result
				+ ((imoEmNegociacao == null) ? 0 : imoEmNegociacao.hashCode());
		result = prime * result
				+ ((imoExclusivo == null) ? 0 : imoExclusivo.hashCode());
		result = prime * result + ((imoFoto == null) ? 0 : imoFoto.hashCode());
		result = prime * result
				+ ((imoGarantia == null) ? 0 : imoGarantia.hashCode());
		result = prime * result + imoId;
		result = prime * result
				+ ((imoIdCaptador == null) ? 0 : imoIdCaptador.hashCode());
		result = prime
				* result
				+ ((imoIdFuncionarioIndicacao == null) ? 0
						: imoIdFuncionarioIndicacao.hashCode());
		result = prime * result
				+ ((imoIdagua == null) ? 0 : imoIdagua.hashCode());
		result = prime * result
				+ ((imoIdluz == null) ? 0 : imoIdluz.hashCode());
		result = prime * result
				+ ((imoLocacao == null) ? 0 : imoLocacao.hashCode());
		result = prime * result
				+ ((imoObservacao == null) ? 0 : imoObservacao.hashCode());
		result = prime
				* result
				+ ((imoObservacaoVistoria == null) ? 0 : imoObservacaoVistoria
						.hashCode());
		result = prime * result
				+ ((imoPedencia == null) ? 0 : imoPedencia.hashCode());
		result = prime
				* result
				+ ((imoPeriodoCadastro == null) ? 0 : imoPeriodoCadastro
						.hashCode());
		result = prime * result
				+ ((imoPlaca == null) ? 0 : imoPlaca.hashCode());
		result = prime * result
				+ ((imoPosicao == null) ? 0 : imoPosicao.hashCode());
		result = prime
				* result
				+ ((imoPrimeiroAluguel == null) ? 0 : imoPrimeiroAluguel
						.hashCode());
		result = prime * result
				+ ((imoQtdCaptado == null) ? 0 : imoQtdCaptado.hashCode());
		result = prime * result + ((imoTaxa == null) ? 0 : imoTaxa.hashCode());
		result = prime * result
				+ ((imoVagoDesde == null) ? 0 : imoVagoDesde.hashCode());
		result = prime * result
				+ ((imoValorAluguel == null) ? 0 : imoValorAluguel.hashCode());
		result = prime
				* result
				+ ((imoValorCondominio == null) ? 0 : imoValorCondominio
						.hashCode());
		result = prime * result
				+ ((imoValorMercado == null) ? 0 : imoValorMercado.hashCode());
		result = prime * result
				+ ((imoVenda == null) ? 0 : imoVenda.hashCode());
		result = prime
				* result
				+ ((imovelCaracteristicases == null) ? 0
						: imovelCaracteristicases.hashCode());
		result = prime * result
				+ ((locacaos == null) ? 0 : locacaos.hashCode());
		result = prime * result
				+ ((propostas == null) ? 0 : propostas.hashCode());
		result = prime * result
				+ ((proprietarios == null) ? 0 : proprietarios.hashCode());
		result = prime * result
				+ ((situacaoimovel == null) ? 0 : situacaoimovel.hashCode());
		result = prime * result
				+ ((temPertos == null) ? 0 : temPertos.hashCode());
		result = prime * result
				+ ((tipoimovel == null) ? 0 : tipoimovel.hashCode());
		result = prime * result
				+ ((vistorias == null) ? 0 : vistorias.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Imovel other = (Imovel) obj;
		if (chaveNoQuadros == null) {
			if (other.chaveNoQuadros != null)
				return false;
		} else if (!chaveNoQuadros.equals(other.chaveNoQuadros))
			return false;
		if (emprestimoChaves == null) {
			if (other.emprestimoChaves != null)
				return false;
		} else if (!emprestimoChaves.equals(other.emprestimoChaves))
			return false;
		if (endereco == null) {
			if (other.endereco != null)
				return false;
		} else if (!endereco.equals(other.endereco))
			return false;
		if (fotoimovels == null) {
			if (other.fotoimovels != null)
				return false;
		} else if (!fotoimovels.equals(other.fotoimovels))
			return false;
		if (funcionario == null) {
			if (other.funcionario != null)
				return false;
		} else if (!funcionario.equals(other.funcionario))
			return false;
		if (imoAreaImovel == null) {
			if (other.imoAreaImovel != null)
				return false;
		} else if (!imoAreaImovel.equals(other.imoAreaImovel))
			return false;
		if (imoAreaTerreno == null) {
			if (other.imoAreaTerreno != null)
				return false;
		} else if (!imoAreaTerreno.equals(other.imoAreaTerreno))
			return false;
		if (imoCategoria == null) {
			if (other.imoCategoria != null)
				return false;
		} else if (!imoCategoria.equals(other.imoCategoria))
			return false;
		if (imoChave == null) {
			if (other.imoChave != null)
				return false;
		} else if (!imoChave.equals(other.imoChave))
			return false;
		if (imoChavePosicao == null) {
			if (other.imoChavePosicao != null)
				return false;
		} else if (!imoChavePosicao.equals(other.imoChavePosicao))
			return false;
		if (imoChaveProprietario == null) {
			if (other.imoChaveProprietario != null)
				return false;
		} else if (!imoChaveProprietario.equals(other.imoChaveProprietario))
			return false;
		if (imoChaveQtd == null) {
			if (other.imoChaveQtd != null)
				return false;
		} else if (!imoChaveQtd.equals(other.imoChaveQtd))
			return false;
		if (imoContratoArquivado == null) {
			if (other.imoContratoArquivado != null)
				return false;
		} else if (!imoContratoArquivado.equals(other.imoContratoArquivado))
			return false;
		if (imoDataAlteracaoSituacao == null) {
			if (other.imoDataAlteracaoSituacao != null)
				return false;
		} else if (!imoDataAlteracaoSituacao
				.equals(other.imoDataAlteracaoSituacao))
			return false;
		if (imoDataCadastro == null) {
			if (other.imoDataCadastro != null)
				return false;
		} else if (!imoDataCadastro.equals(other.imoDataCadastro))
			return false;
		if (imoDataCaptacao == null) {
			if (other.imoDataCaptacao != null)
				return false;
		} else if (!imoDataCaptacao.equals(other.imoDataCaptacao))
			return false;
		if (imoDataConstrucao == null) {
			if (other.imoDataConstrucao != null)
				return false;
		} else if (!imoDataConstrucao.equals(other.imoDataConstrucao))
			return false;
		if (imoDataInicioLocacao == null) {
			if (other.imoDataInicioLocacao != null)
				return false;
		} else if (!imoDataInicioLocacao.equals(other.imoDataInicioLocacao))
			return false;
		if (imoDataParaNegociacao == null) {
			if (other.imoDataParaNegociacao != null)
				return false;
		} else if (!imoDataParaNegociacao.equals(other.imoDataParaNegociacao))
			return false;
		if (imoDataProspeccao == null) {
			if (other.imoDataProspeccao != null)
				return false;
		} else if (!imoDataProspeccao.equals(other.imoDataProspeccao))
			return false;
		if (imoDataRejeicao == null) {
			if (other.imoDataRejeicao != null)
				return false;
		} else if (!imoDataRejeicao.equals(other.imoDataRejeicao))
			return false;
		if (imoDataUltimaAlteracao == null) {
			if (other.imoDataUltimaAlteracao != null)
				return false;
		} else if (!imoDataUltimaAlteracao.equals(other.imoDataUltimaAlteracao))
			return false;
		if (imoDiasDeCadastro == null) {
			if (other.imoDiasDeCadastro != null)
				return false;
		} else if (!imoDiasDeCadastro.equals(other.imoDiasDeCadastro))
			return false;
		if (imoDisponivelWeb == null) {
			if (other.imoDisponivelWeb != null)
				return false;
		} else if (!imoDisponivelWeb.equals(other.imoDisponivelWeb))
			return false;
		if (imoEfetivo == null) {
			if (other.imoEfetivo != null)
				return false;
		} else if (!imoEfetivo.equals(other.imoEfetivo))
			return false;
		if (imoEmNegociacao == null) {
			if (other.imoEmNegociacao != null)
				return false;
		} else if (!imoEmNegociacao.equals(other.imoEmNegociacao))
			return false;
		if (imoExclusivo == null) {
			if (other.imoExclusivo != null)
				return false;
		} else if (!imoExclusivo.equals(other.imoExclusivo))
			return false;
		if (imoFoto == null) {
			if (other.imoFoto != null)
				return false;
		} else if (!imoFoto.equals(other.imoFoto))
			return false;
		if (imoGarantia == null) {
			if (other.imoGarantia != null)
				return false;
		} else if (!imoGarantia.equals(other.imoGarantia))
			return false;
		if (imoId != other.imoId)
			return false;
		if (imoIdCaptador == null) {
			if (other.imoIdCaptador != null)
				return false;
		} else if (!imoIdCaptador.equals(other.imoIdCaptador))
			return false;
		if (imoIdFuncionarioIndicacao == null) {
			if (other.imoIdFuncionarioIndicacao != null)
				return false;
		} else if (!imoIdFuncionarioIndicacao
				.equals(other.imoIdFuncionarioIndicacao))
			return false;
		if (imoIdagua == null) {
			if (other.imoIdagua != null)
				return false;
		} else if (!imoIdagua.equals(other.imoIdagua))
			return false;
		if (imoIdluz == null) {
			if (other.imoIdluz != null)
				return false;
		} else if (!imoIdluz.equals(other.imoIdluz))
			return false;
		if (imoLocacao == null) {
			if (other.imoLocacao != null)
				return false;
		} else if (!imoLocacao.equals(other.imoLocacao))
			return false;
		if (imoObservacao == null) {
			if (other.imoObservacao != null)
				return false;
		} else if (!imoObservacao.equals(other.imoObservacao))
			return false;
		if (imoObservacaoVistoria == null) {
			if (other.imoObservacaoVistoria != null)
				return false;
		} else if (!imoObservacaoVistoria.equals(other.imoObservacaoVistoria))
			return false;
		if (imoPedencia == null) {
			if (other.imoPedencia != null)
				return false;
		} else if (!imoPedencia.equals(other.imoPedencia))
			return false;
		if (imoPeriodoCadastro == null) {
			if (other.imoPeriodoCadastro != null)
				return false;
		} else if (!imoPeriodoCadastro.equals(other.imoPeriodoCadastro))
			return false;
		if (imoPlaca == null) {
			if (other.imoPlaca != null)
				return false;
		} else if (!imoPlaca.equals(other.imoPlaca))
			return false;
		if (imoPosicao == null) {
			if (other.imoPosicao != null)
				return false;
		} else if (!imoPosicao.equals(other.imoPosicao))
			return false;
		if (imoPrimeiroAluguel == null) {
			if (other.imoPrimeiroAluguel != null)
				return false;
		} else if (!imoPrimeiroAluguel.equals(other.imoPrimeiroAluguel))
			return false;
		if (imoQtdCaptado == null) {
			if (other.imoQtdCaptado != null)
				return false;
		} else if (!imoQtdCaptado.equals(other.imoQtdCaptado))
			return false;
		if (imoTaxa == null) {
			if (other.imoTaxa != null)
				return false;
		} else if (!imoTaxa.equals(other.imoTaxa))
			return false;
		if (imoVagoDesde == null) {
			if (other.imoVagoDesde != null)
				return false;
		} else if (!imoVagoDesde.equals(other.imoVagoDesde))
			return false;
		if (imoValorAluguel == null) {
			if (other.imoValorAluguel != null)
				return false;
		} else if (!imoValorAluguel.equals(other.imoValorAluguel))
			return false;
		if (imoValorCondominio == null) {
			if (other.imoValorCondominio != null)
				return false;
		} else if (!imoValorCondominio.equals(other.imoValorCondominio))
			return false;
		if (imoValorMercado == null) {
			if (other.imoValorMercado != null)
				return false;
		} else if (!imoValorMercado.equals(other.imoValorMercado))
			return false;
		if (imoVenda == null) {
			if (other.imoVenda != null)
				return false;
		} else if (!imoVenda.equals(other.imoVenda))
			return false;
		if (imovelCaracteristicases == null) {
			if (other.imovelCaracteristicases != null)
				return false;
		} else if (!imovelCaracteristicases
				.equals(other.imovelCaracteristicases))
			return false;
		if (locacaos == null) {
			if (other.locacaos != null)
				return false;
		} else if (!locacaos.equals(other.locacaos))
			return false;
		if (propostas == null) {
			if (other.propostas != null)
				return false;
		} else if (!propostas.equals(other.propostas))
			return false;
		if (proprietarios == null) {
			if (other.proprietarios != null)
				return false;
		} else if (!proprietarios.equals(other.proprietarios))
			return false;
		if (situacaoimovel == null) {
			if (other.situacaoimovel != null)
				return false;
		} else if (!situacaoimovel.equals(other.situacaoimovel))
			return false;
		if (temPertos == null) {
			if (other.temPertos != null)
				return false;
		} else if (!temPertos.equals(other.temPertos))
			return false;
		if (tipoimovel == null) {
			if (other.tipoimovel != null)
				return false;
		} else if (!tipoimovel.equals(other.tipoimovel))
			return false;
		if (vistorias == null) {
			if (other.vistorias != null)
				return false;
		} else if (!vistorias.equals(other.vistorias))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Imovel [imoId=" + imoId + "]";
	}

	public List<Proprietario> teste(Imovel i){
		ProprietarioRN proRN=new ProprietarioRN();
		return proRN.carregarProprietarios(i);
	}
	
}
