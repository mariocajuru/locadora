package br.com.locadora.modelo;

// Generated 20/06/2014 10:06:28 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * StatusLocacao generated by hbm2java
 */
@Audited
@Entity
@Table(name = "STATUS_LOCACAO", catalog = "renovarsistemas")
@AuditTable(value="STATUS_LOCACAO", schema="log", catalog="renovarsistemas")
public class StatusLocacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 527096241745089877L;
	private int staLocId;
	private String staLocNome;
	private Set<Locacao> locacaos = new HashSet<Locacao>(0);

	public StatusLocacao() {
	}

	public StatusLocacao(int staLocId) {
		this.staLocId = staLocId;
	}

	public StatusLocacao(int staLocId, String staLocNome, Set<Locacao> locacaos) {
		this.staLocId = staLocId;
		this.staLocNome = staLocNome;
		this.locacaos = locacaos;
	}

	@Id
	@GeneratedValue
	@Column(name = "STA_LOC_ID", unique = true, nullable = false)
	public int getStaLocId() {
		return this.staLocId;
	}

	public void setStaLocId(int staLocId) {
		this.staLocId = staLocId;
	}

	@Column(name = "STA_LOC_NOME", length = 70)
	public String getStaLocNome() {
		return this.staLocNome;
	}

	public void setStaLocNome(String staLocNome) {
		this.staLocNome = staLocNome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "statusLocacao")
	@NotAudited
	public Set<Locacao> getLocacaos() {
		return this.locacaos;
	}

	public void setLocacaos(Set<Locacao> locacaos) {
		this.locacaos = locacaos;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((locacaos == null) ? 0 : locacaos.hashCode());
		result = prime * result + staLocId;
		result = prime * result
				+ ((staLocNome == null) ? 0 : staLocNome.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		StatusLocacao other = (StatusLocacao) obj;
		if (locacaos == null) {
			if (other.locacaos != null)
				return false;
		} else if (!locacaos.equals(other.locacaos))
			return false;
		if (staLocId != other.staLocId)
			return false;
		if (staLocNome == null) {
			if (other.staLocNome != null)
				return false;
		} else if (!staLocNome.equals(other.staLocNome))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "StatusLocacao [staLocId=" + staLocId + "]";
	}

}
