package br.com.locadora.modelo;

// Generated 07/05/2014 15:18:01 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * HistoricoPessoa generated by hbm2java
 */
@Audited
@Entity
@Table(name = "HISTORICO_PESSOA", catalog = "renovarsistemas")
@AuditTable(value="HISTORICO_PESSOA", schema="log", catalog="renovarsistemas")
public class HistoricoPessoa implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2898752704363577937L;
	private int hisId;
	private Pessoa pessoa;
	private String hisDescricao;
	private Date hisData;

	public HistoricoPessoa() {
	}

	public HistoricoPessoa(int hisId, Pessoa pessoa) {
		this.hisId = hisId;
		this.pessoa = pessoa;
	}

	public HistoricoPessoa(int hisId, Pessoa pessoa, String hisDescricao,
			Date hisData) {
		this.hisId = hisId;
		this.pessoa = pessoa;
		this.hisDescricao = hisDescricao;
		this.hisData = hisData;
	}

	@Id
	@GeneratedValue
	@Column(name = "HIS_ID", unique = true, nullable = false)
	public int getHisId() {
		return this.hisId;
	}

	public void setHisId(int hisId) {
		this.hisId = hisId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_ID", nullable = false)
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "HIS_DESCRICAO")
	public String getHisDescricao() {
		return this.hisDescricao;
	}

	public void setHisDescricao(String hisDescricao) {
		this.hisDescricao = hisDescricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HIS_DATA", length = 23)
	public Date getHisData() {
		return this.hisData;
	}

	public void setHisData(Date hisData) {
		this.hisData = hisData;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((hisData == null) ? 0 : hisData.hashCode());
		result = prime * result
				+ ((hisDescricao == null) ? 0 : hisDescricao.hashCode());
		result = prime * result + hisId;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		HistoricoPessoa other = (HistoricoPessoa) obj;
		if (hisData == null) {
			if (other.hisData != null)
				return false;
		} else if (!hisData.equals(other.hisData))
			return false;
		if (hisDescricao == null) {
			if (other.hisDescricao != null)
				return false;
		} else if (!hisDescricao.equals(other.hisDescricao))
			return false;
		if (hisId != other.hisId)
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "HistoricoPessoa [hisId=" + hisId + "]";
	}

}
