package br.com.locadora.modelo;

// Generated 04/09/2014 15:47:45 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;

/**
 * ParametroReferencia generated by hbm2java
 */
@Audited
@Entity
@Table(name = "PARAMETRO_REFERENCIA", catalog = "renovarsistemas")
@AuditTable(value="PARAMETRO_REFERENCIA", schema="log", catalog="renovarsistemas")
public class ParametroReferencia implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7024833911261131650L;
	private int parRefId;
	private String parRefNome;
	private Set<TipoDeParametro> tipoDeParametros = new HashSet<TipoDeParametro>(
			0);

	public ParametroReferencia() {
	}

	public ParametroReferencia(int parRefId) {
		this.parRefId = parRefId;
	}

	public ParametroReferencia(int parRefId, String parRefNome,
			Set<TipoDeParametro> tipoDeParametros) {
		this.parRefId = parRefId;
		this.parRefNome = parRefNome;
		this.tipoDeParametros = tipoDeParametros;
	}

	@Id
	@GeneratedValue
	@Column(name = "PAR_REF_ID", unique = true, nullable = false)
	public int getParRefId() {
		return this.parRefId;
	}

	public void setParRefId(int parRefId) {
		this.parRefId = parRefId;
	}

	@Column(name = "PAR_REF_NOME", length = 90)
	public String getParRefNome() {
		return this.parRefNome;
	}

	public void setParRefNome(String parRefNome) {
		this.parRefNome = parRefNome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parametroReferencia")
	@NotAudited
	public Set<TipoDeParametro> getTipoDeParametros() {
		return this.tipoDeParametros;
	}

	public void setTipoDeParametros(Set<TipoDeParametro> tipoDeParametros) {
		this.tipoDeParametros = tipoDeParametros;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + parRefId;
		result = prime * result
				+ ((parRefNome == null) ? 0 : parRefNome.hashCode());
		result = prime
				* result
				+ ((tipoDeParametros == null) ? 0 : tipoDeParametros.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ParametroReferencia other = (ParametroReferencia) obj;
		if (parRefId != other.parRefId)
			return false;
		if (parRefNome == null) {
			if (other.parRefNome != null)
				return false;
		} else if (!parRefNome.equals(other.parRefNome))
			return false;
		if (tipoDeParametros == null) {
			if (other.tipoDeParametros != null)
				return false;
		} else if (!tipoDeParametros.equals(other.tipoDeParametros))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ParametroReferencia [parRefId=" + parRefId + "]";
	}

}
